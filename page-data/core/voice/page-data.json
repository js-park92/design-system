{
    "componentChunkName": "component---src-templates-page-tsx",
    "path": "/core/voice",
    "result": {"data":{"mdx":{"body":"var _excluded = [\"components\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar _frontmatter = {\n  \"name\": \"Voice & tone\",\n  \"route\": \"/core/voice\"\n};\n\nvar makeShortcode = function makeShortcode(name) {\n  return function MDXDefaultShortcode(props) {\n    console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n    return mdx(\"div\", props);\n  };\n};\n\nvar Intro = makeShortcode(\"Intro\");\nvar TableOfContents = makeShortcode(\"TableOfContents\");\nvar Guideline = makeShortcode(\"Guideline\");\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"h1\", {\n    \"id\": \"voice--tone\"\n  }, \"Voice & tone\"), mdx(Intro, {\n    mdxType: \"Intro\"\n  }, \"Just as products should look and behave consistently, they should also speak consistently. Learn how to apply Pluralsight\\u2019s voice and choose the right tone for the experience you're creating.\"), mdx(TableOfContents, _extends({}, props, {\n    mdxType: \"TableOfContents\"\n  })), mdx(\"h2\", {\n    \"id\": \"overview\"\n  }, \"Overview\"), mdx(\"p\", null, \"Our writing voice is friendly, as if you\\u2019re speaking to a relative or colleague. We don\\u2019t want to come across as stuffy or as if we\\u2019re talking down to our reader, but we do want to come across as credible and knowledgeable. This does not mean that you should forgo basic style guidelines. But, it does mean that you shouldn\\u2019t be afraid to start a sentence with conjunctions like \\u201Cbut\\u201D or \\u201Cand.\\u201D You should also use contractions (didn\\u2019t, don\\u2019t, haven\\u2019t, hadn\\u2019t) freely.\"), mdx(\"p\", null, \"We follow these three core principles in our writing:\"), mdx(EqualColumnLayout, {\n    count: EqualColumnLayout.counts.three,\n    mdxType: \"EqualColumnLayout\"\n  }, mdx(\"div\", null, mdx(PrincipleHeader, {\n    mdxType: \"PrincipleHeader\"\n  }, \"Confident\"), mdx(P, {\n    mdxType: \"P\"\n  }, \"Be simple and direct. Avoid long, hard words and formal language. Try not to say too many things at once. Avoid hedging language and evasive phrases such as \\u201Cseems like\\u201D and \\u201Caccording to.\\u201D Steer clear of empty words like \\u201Cworld class,\\u201D \\u201Crobust\\u201D and \\u201Chigh quality.\\u201D\")), mdx(\"div\", null, mdx(PrincipleHeader, {\n    mdxType: \"PrincipleHeader\"\n  }, \"Enthusiastic\"), mdx(P, {\n    mdxType: \"P\"\n  }, \"Stay positive by avoiding comparisons designed to elevate one idea by diminishing another. Assume success and stay away from fear. Celebrate the craft. Our audience appreciates the skill that goes into their work, so shine light on it whenever possible.\")), mdx(\"div\", null, mdx(PrincipleHeader, {\n    mdxType: \"PrincipleHeader\"\n  }, \"Clever\"), mdx(P, {\n    mdxType: \"P\"\n  }, \"Show our audience you relate to their joys and frustrations. That you know they have interests outside of work. Infuse your writing with the unexpected and engage in wordplay but not at the expense of being clear. At times, be light-hearted but not light-headed.\"))), mdx(\"h2\", {\n    \"id\": \"point-of-view\"\n  }, \"Point of view\"), mdx(\"p\", null, \"Generally, write in \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"https://en.wikipedia.org/wiki/Narration#Second-person\"\n  }, \"second person\"), \",\\naddressing the audience as \\u201Cyou,\\u201D \\u201Cyour,\\u201D etc. Talk to your audience\\ndirectly, addressing them as \\u201Cyou\\u201D not as \\u201Cone,\\u201D \\u201Cpersons,\\u201D etc. Avoid phrases like this: \\u201CTo take a skill assessment, one needs to select\\u2026\\u201D This language feels formal and unnatural.\"), mdx(\"p\", null, \"One exception to this is when writing for hands-on learning exercises. To be more inclusive and encouraging to the learner, write in the first-person-plural point of view to show that we're on this learning journey with them.\"), mdx(\"h2\", {\n    \"id\": \"capitalization--punctuation\"\n  }, \"Capitalization & Punctuation\"), mdx(EqualColumnLayout, {\n    count: EqualColumnLayout.counts.two,\n    mdxType: \"EqualColumnLayout\"\n  }, mdx(\"div\", null, mdx(Heading, {\n    size: Heading.sizes.medium,\n    mdxType: \"Heading\"\n  }, mdx(\"h3\", null, \"Headlines\")), mdx(P, {\n    mdxType: \"P\"\n  }, \"Write headlines in sentence case, meaning only capitalize the first word and any proper nouns.\")), mdx(Quote, {\n    mdxType: \"Quote\"\n  }, \"Measure your skills\")), mdx(EqualColumnLayout, {\n    count: EqualColumnLayout.counts.two,\n    mdxType: \"EqualColumnLayout\"\n  }, mdx(\"div\", null, mdx(P, {\n    mdxType: \"P\"\n  }, \"Only punctuate a headline when it uses more than one sentence.\")), mdx(Quote, {\n    mdxType: \"Quote\"\n  }, \"Measure your skills. Learn something new.\")), mdx(EqualColumnLayout, {\n    count: EqualColumnLayout.counts.two,\n    mdxType: \"EqualColumnLayout\"\n  }, mdx(\"div\", null, mdx(Heading, {\n    size: Heading.sizes.medium,\n    mdxType: \"Heading\"\n  }, mdx(\"h3\", null, \"Commas\")), mdx(P, {\n    mdxType: \"P\"\n  }, \"We do not use a serial comma, a comma in front of the conjunction connecting list items.\")), mdx(Quote, {\n    mdxType: \"Quote\"\n  }, \"At Pluralsight we are big fans of pizza, Indian and Chinese food.\")), mdx(EqualColumnLayout, {\n    count: EqualColumnLayout.counts.two,\n    mdxType: \"EqualColumnLayout\"\n  }, mdx(\"div\", null, mdx(P, {\n    mdxType: \"P\"\n  }, \"Exception: We do use a serial comma when the phrase before the conjunction also has a conjunction or if the phrases separated by the commas will be less confusing if commas are used throughout.\")), mdx(Quote, {\n    mdxType: \"Quote\"\n  }, \"While studying for certifications, it\\u2019s important to use flash cards, practice tests, online or instructor-led training, and study guides.\")), mdx(\"h3\", {\n    \"id\": \"exclamation-points\"\n  }, \"Exclamation points\"), mdx(\"p\", null, \"Avoid over-using exclamation points, unless offering congratulations on having\\ncompleted a complex flow. Exclamation points aren\\u2019t a substitute for\\ncreating excitement.\"), mdx(\"h2\", {\n    \"id\": \"buttons-links-and-other-actions\"\n  }, \"Buttons, links and other actions\"), mdx(EqualColumnLayout, {\n    count: EqualColumnLayout.counts.two,\n    mdxType: \"EqualColumnLayout\"\n  }, mdx(\"div\", null, mdx(P, {\n    mdxType: \"P\"\n  }, \"Buttons should always be clear, direct and actionable. A link should be descriptive of the place it's taking the user. Do not use text such as \\u2018click here\\u2019, or anything that does not make sense when read out of context.\")), mdx(Quote, {\n    mdxType: \"Quote\"\n  }, mdx(EqualColumnLayout, {\n    count: EqualColumnLayout.counts.two,\n    mdxType: \"EqualColumnLayout\"\n  }, mdx(QuoteList, {\n    mdxType: \"QuoteList\"\n  }, mdx(\"li\", null, \"Learn now\"), mdx(\"li\", null, \"Get started\"), mdx(\"li\", null, \"Get your IQ\")), mdx(QuoteList, {\n    mdxType: \"QuoteList\"\n  }, mdx(\"li\", null, \"Watch a course\"), mdx(\"li\", null, \"Start a path\"), mdx(\"li\", null, \"Tell us more\"))))), mdx(\"h2\", {\n    \"id\": \"error-messages\"\n  }, \"Error messages\"), mdx(\"p\", null, \"Do all you can to prevent errors, but when they occur, use the opportunity to\\nhelp users understand what happened and how to get through it. Follow these 3\\nguidelines when writing error messages:\"), mdx(\"h3\", {\n    \"id\": \"1-explain-what-happened-and-why\"\n  }, \"1. Explain what happened and why\"), mdx(\"p\", null, \"Be clear about what\\u2019s going on. Give the right amount of detail, but don\\u2019t get\\ntoo technical. Write in a way that anyone could easily understand without\\nusing jargon.\"), mdx(Guideline, {\n    do: mdx(CenteredExample, {\n      mdxType: \"CenteredExample\"\n    }, mdx(P, {\n      mdxType: \"P\"\n    }, mdx(\"strong\", null, \"Your credit card has expired\")), mdx(P, {\n      mdxType: \"P\"\n    }, \"Update your payment method to restore your subscription.\")),\n    dont: mdx(CenteredExample, {\n      mdxType: \"CenteredExample\"\n    }, mdx(P, {\n      mdxType: \"P\"\n    }, mdx(\"strong\", null, \"Billing Error\"))),\n    mdxType: \"Guideline\"\n  }), mdx(\"h3\", {\n    \"id\": \"2-suggest-a-next-step\"\n  }, \"2. Suggest a next step\"), mdx(\"p\", null, \"After you explain what happened, tell the user what they can do to resolve the\\nissue. If possible include a button, a link, or another call to action.\"), mdx(Guideline, {\n    do: mdx(CenteredExample, {\n      mdxType: \"CenteredExample\"\n    }, mdx(P, {\n      mdxType: \"P\"\n    }, mdx(\"strong\", null, \"There was a problem loading the video\")), mdx(\"br\", null), mdx(Button, {\n      mdxType: \"Button\"\n    }, \"Try again\")),\n    dont: mdx(CenteredExample, {\n      mdxType: \"CenteredExample\"\n    }, mdx(P, {\n      mdxType: \"P\"\n    }, mdx(\"strong\", null, \"Error 7007\")), mdx(P, {\n      mdxType: \"P\"\n    }, \"Unable to play video\")),\n    mdxType: \"Guideline\"\n  }), mdx(\"h3\", {\n    \"id\": \"3-match-the-tone-to-the-context\"\n  }, \"3. Match the tone to the context\"), mdx(\"p\", null, \"Avoid being robotic or silly. Remember, something went wrong, now's your time\\nto help them through it in a friendly way.\"), mdx(Guideline, {\n    do: mdx(CenteredExample, {\n      mdxType: \"CenteredExample\"\n    }, mdx(P, {\n      mdxType: \"P\"\n    }, \"That password doesn\\u2019t match. Try again?\")),\n    dont: mdx(CenteredExample, {\n      mdxType: \"CenteredExample\"\n    }, mdx(P, {\n      mdxType: \"P\"\n    }, \"Yo, big problemo! The password you provided doesn\\u2019t match. Wanna try that again?\")),\n    mdxType: \"Guideline\"\n  }), mdx(\"h2\", {\n    \"id\": \"formatting\"\n  }, \"Formatting\"), mdx(EqualColumnLayout, {\n    count: EqualColumnLayout.counts.two,\n    mdxType: \"EqualColumnLayout\"\n  }, mdx(\"div\", null, mdx(Heading, {\n    size: Heading.sizes.medium,\n    mdxType: \"Heading\"\n  }, mdx(\"h3\", null, \"Time\")), mdx(P, {\n    mdxType: \"P\"\n  }, \"Follow AP conventions, only listing a.m. or p.m. on one of the times unless the time spans both a.m. and p.m. Drop :00 from any times that start at the hour. Use noon or midnight vs. 12 a.m. and 12 p.m.\")), mdx(Quote, {\n    mdxType: \"Quote\"\n  }, \"10:30 a.m.\\u20131 p.m.\", mdx(\"br\", null), \"Noon\\u20133 p.m.\", mdx(\"br\", null), \"1\\u20135:30 p.m.\")), mdx(EqualColumnLayout, {\n    count: EqualColumnLayout.counts.two,\n    mdxType: \"EqualColumnLayout\"\n  }, mdx(\"div\", null, mdx(Heading, {\n    size: Heading.sizes.medium,\n    mdxType: \"Heading\"\n  }, mdx(\"h3\", null, \"Dates\")), mdx(P, {\n    mdxType: \"P\"\n  }, \"Do not use contractions (st, th, etc.) within a complete sentence. Do not use leading zeros on days. Feel free to abbreviate months. Use four digit year.\")), mdx(Quote, {\n    mdxType: \"Quote\"\n  }, \"On May 15, Microsoft announced\\u2026\", mdx(\"br\", null), \"Jan 23, 2017\", mdx(\"br\", null), \"Jan 2017\")), mdx(EqualColumnLayout, {\n    count: EqualColumnLayout.counts.two,\n    mdxType: \"EqualColumnLayout\"\n  }, mdx(\"div\", null, mdx(Heading, {\n    size: Heading.sizes.medium,\n    mdxType: \"Heading\"\n  }, mdx(\"h3\", null, \"Numbers\")), mdx(P, {\n    mdxType: \"P\"\n  }, \"For numerals over 999, insert a comma for clarity.\")), mdx(Quote, {\n    mdxType: \"Quote\"\n  }, \"1,643\")), mdx(EqualColumnLayout, {\n    count: EqualColumnLayout.counts.two,\n    mdxType: \"EqualColumnLayout\"\n  }, mdx(\"div\", null, mdx(Heading, {\n    size: Heading.sizes.medium,\n    mdxType: \"Heading\"\n  }, mdx(\"h3\", null, \"Duration\")), mdx(P, {\n    mdxType: \"P\"\n  }, \"When listing duration of long content, round to the nearest hour or minute, with no leading zeros. For approximate durations, round to nearest appropriate value. For short and exact duration, display standard time format, no leading zeros.\")), mdx(Quote, {\n    mdxType: \"Quote\"\n  }, \"23h 8m\", mdx(\"br\", null), \"23h\", mdx(\"br\", null), \"About 1 hour\", mdx(\"br\", null), \"About 30 minutes\", mdx(\"br\", null), \"4:54\")), mdx(EqualColumnLayout, {\n    count: EqualColumnLayout.counts.two,\n    mdxType: \"EqualColumnLayout\"\n  }, mdx(\"div\", null, mdx(Heading, {\n    size: Heading.sizes.medium,\n    mdxType: \"Heading\"\n  }, mdx(\"h3\", null, \"Names\")), mdx(P, {\n    mdxType: \"P\"\n  }, \"When listing a single author or owner, display full name. If listing multiple and space is limited, abbreviating to last name only is acceptable. Do not use \\u201CBy\\u201D in the beginning of an author(s) string.\")), mdx(Quote, {\n    mdxType: \"Quote\"\n  }, \"Gary Eimerman\", mdx(\"br\", null), \"Gary Eimerman, Troy Hunt\", mdx(\"br\", null), \"Eimerman, Hunt\", mdx(\"br\", null), \"Gary Eimerman, Troy Hunt, Lars Klint\", mdx(\"br\", null), \"Eimerman, +2\")), mdx(\"br\", null));\n}\n;\nMDXContent.isMDXComponent = true;","frontmatter":{"name":"Voice & tone","route":"/core/voice"},"headings":[{"value":"Voice & tone","depth":1},{"value":"Overview","depth":2},{"value":"Point of view","depth":2},{"value":"Capitalization & Punctuation","depth":2},{"value":"Exclamation points","depth":3},{"value":"Buttons, links and other actions","depth":2},{"value":"Error messages","depth":2},{"value":"1. Explain what happened and why","depth":3},{"value":"2. Suggest a next step","depth":3},{"value":"3. Match the tone to the context","depth":3},{"value":"Formatting","depth":2}]}},"pageContext":{"slug":"/core/voice/","version":"CHANGELOG"}},
    "staticQueryHashes": []}