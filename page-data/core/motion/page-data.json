{
    "componentChunkName": "component---src-templates-page-tsx",
    "path": "/core/motion",
    "result": {"data":{"mdx":{"body":"var _excluded = [\"components\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar _frontmatter = {\n  \"name\": \"Motion\",\n  \"route\": \"/core/motion\"\n};\n\nvar makeShortcode = function makeShortcode(name) {\n  return function MDXDefaultShortcode(props) {\n    console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n    return mdx(\"div\", props);\n  };\n};\n\nvar TableOfContents = makeShortcode(\"TableOfContents\");\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"h1\", {\n    \"id\": \"motion\"\n  }, \"Motion\"), mdx(TableOfContents, _extends({}, props, {\n    mdxType: \"TableOfContents\"\n  })), mdx(\"h2\", {\n    \"id\": \"speed\"\n  }, \"Speed\"), mdx(\"p\", null, \"Motion speed should most often occur at the following standard increments.\"), mdx(Speeds, {\n    mdxType: \"Speeds\"\n  }), mdx(\"p\", null, \"Use the CSS variables to set the duration.\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-css\"\n  }, \"@import '@pluralsight/ps-design-system-core';\\n\\n.mySelector {\\n  animation-duration: var(--ps-motion-speed-xfast);\\n}\\n\")), mdx(\"p\", null, \"To select a duration, use the following rules of thumb.\"), mdx(Relative, {\n    mdxType: \"Relative\"\n  }), mdx(\"p\", null, \"A small object moving a great relative distance may have slightly longer duration so that the movement isn\\u2019t too fast and abrupt.\"), mdx(Travel, {\n    mdxType: \"Travel\"\n  }), mdx(\"h2\", {\n    \"id\": \"easing\"\n  }, \"Easing\"), mdx(\"p\", null, \"Some general guidance on selecting an easing curve.\"), mdx(Easing, {\n    mdxType: \"Easing\"\n  }), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-css\"\n  }, \"@import '@pluralsight/ps-design-system-core';\\n\\n.mySelector {\\n  animation-timing-function: ease-in-out;\\n}\\n\")), mdx(\"h2\", {\n    \"id\": \"rotation\"\n  }, \"Rotation\"), mdx(\"p\", null, \"Generally, larger objects look more natural when rotating slower than smaller objects. The easing property for rotation should be \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"linear\"), \".\"), mdx(Rotation, {\n    mdxType: \"Rotation\"\n  }), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-css\"\n  }, \"@import '@pluralsight/ps-design-system-core';\\n\\n@keyframes rotateMe {\\n  to {\\n    transform: rotate(360deg);\\n  }\\n}\\n\\n.mySelector {\\n  animation: var(--psMotionSpeedNormal) linear infinite rotateMe;\\n}\\n\")));\n}\n;\nMDXContent.isMDXComponent = true;","frontmatter":{"name":"Motion","route":"/core/motion"},"headings":[{"value":"Motion","depth":1},{"value":"Speed","depth":2},{"value":"Easing","depth":2},{"value":"Rotation","depth":2}]}},"pageContext":{"slug":"/core/motion/","version":"CHANGELOG"}},
    "staticQueryHashes": []}