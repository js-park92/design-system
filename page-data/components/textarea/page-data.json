{
    "componentChunkName": "component---src-templates-page-tsx",
    "path": "/components/textarea",
    "result": {"data":{"mdx":{"body":"var _excluded = [\"components\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar _frontmatter = {\n  \"name\": \"Text area\",\n  \"route\": \"/components/textarea\"\n};\n\nvar makeShortcode = function makeShortcode(name) {\n  return function MDXDefaultShortcode(props) {\n    console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n    return mdx(\"div\", props);\n  };\n};\n\nvar Intro = makeShortcode(\"Intro\");\nvar Usage = makeShortcode(\"Usage\");\nvar TableOfContents = makeShortcode(\"TableOfContents\");\nvar CheckCircleFillIcon = makeShortcode(\"CheckCircleFillIcon\");\nvar WarningFilledIcon = makeShortcode(\"WarningFilledIcon\");\nvar TypesTable = makeShortcode(\"TypesTable\");\nvar TypesProp = makeShortcode(\"TypesProp\");\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"h1\", {\n    \"id\": \"text-area\"\n  }, \"Text area\"), mdx(Intro, {\n    mdxType: \"Intro\"\n  }, \"A text area lets a user input a longer amount of text than a standard text field.\"), mdx(Usage, {\n    figmaUrl: \"https://www.figma.com/file/YsTklBecdddy9RZ3HXddIseD/PSDS-Web-Components?node-id=11313%3A14\",\n    install: \"npm install @pluralsight/ps-design-system-textarea\",\n    import: \"import TextArea from '@pluralsight/ps-design-system-textarea'\",\n    packageName: \"textarea\",\n    version: props.version,\n    mdxType: \"Usage\"\n  }), mdx(TableOfContents, _extends({}, props, {\n    mdxType: \"TableOfContents\"\n  })), mdx(\"h2\", {\n    \"id\": \"examples\"\n  }, \"Examples\"), mdx(\"h3\", {\n    \"id\": \"labels\"\n  }, \"Labels\"), mdx(\"p\", null, \"Primary identification of a text area comes through the \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"label\"), \". Usage hints are given in the \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"placeholder\"), \". Supporting text and error messaging is set in the \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"subLabel\"), \".\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-typescript\"\n  }, \"import React from 'react'\\nimport TextArea from '@pluralsight/ps-design-system-textarea'\\n\\nconst Comp = () => (\\n  <div className=\\\"example-flex-column\\\">\\n    <TextArea label=\\\"Bio\\\" />\\n    <TextArea label=\\\"Bio\\\" placeholder=\\\"What brought you to authoring?\\\" />\\n    <TextArea\\n      label=\\\"Bio\\\"\\n      placeholder=\\\"What brought you to authoring?\\\"\\n      subLabel=\\\"The short version\\\"\\n    />\\n  </div>\\n)\\n\\nexport default Comp\\n\")), mdx(\"h3\", {\n    \"id\": \"appearance\"\n  }, \"Appearance\"), mdx(\"p\", null, \"For a more subtle look in the dark theme, use \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"subtle\"), \" appearance. So subtle.\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-typescript\"\n  }, \"import React from 'react'\\nimport TextArea from '@pluralsight/ps-design-system-textarea'\\n\\nconst Example = () => (\\n  <TextArea\\n    appearance={TextArea.appearances.subtle}\\n    placeholder=\\\"Type some subtleness\\\"\\n  />\\n)\\n\\nexport default Example\\n\")), mdx(\"h3\", {\n    \"id\": \"disabled\"\n  }, \"Disabled\"), mdx(\"p\", null, \"Disabled text inputs are unmodifiable and diminished visually.\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-typescript\"\n  }, \"import React from 'react'\\nimport TextArea from '@pluralsight/ps-design-system-textarea'\\n\\nconst Comp = () => <TextArea disabled label=\\\"Can't touch this\\\" />\\n\\nexport default Comp\\n\")), mdx(\"h3\", {\n    \"id\": \"error\"\n  }, \"Error\"), mdx(\"p\", null, \"Error states are engaged with the \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"error\"), \" flag. Error-related messaging is sent to the \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"subLabel\"), \" prop.\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-typescript\"\n  }, \"import React from 'react'\\nimport TextArea from '@pluralsight/ps-design-system-textarea'\\n\\nconst Comp = () => <TextArea error label=\\\"Bio\\\" subLabel=\\\"Field is required\\\" />\\n\\nexport default Comp\\n\")), mdx(\"h3\", {\n    \"id\": \"rows\"\n  }, \"Rows\"), mdx(\"p\", null, \"To increase the height of the text area, use the \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"rows\"), \" prop.\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-typescript\"\n  }, \"import React from 'react'\\nimport TextArea from '@pluralsight/ps-design-system-textarea'\\n\\nconst Comp = () => (\\n  <TextArea rows={8} label=\\\"Bio\\\" subLabel=\\\"Field is required\\\" />\\n)\\n\\nexport default Comp\\n\")), mdx(\"h2\", {\n    \"id\": \"accessibility\"\n  }, \"Accessibility\"), mdx(\"p\", null, mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"WCAG 2.1 AA Compliance\")), mdx(CheckCircleFillIcon, {\n    color: \"green\",\n    size: \"xSmall\",\n    mdxType: \"CheckCircleFillIcon\"\n  }), \" 100% axe-core tests\", mdx(\"br\", null), mdx(WarningFilledIcon, {\n    color: \"red\",\n    size: \"xSmall\",\n    mdxType: \"WarningFilledIcon\"\n  }), \" Manual audit\", mdx(\"h2\", {\n    \"id\": \"props\"\n  }, \"Props\"), mdx(TypesTable, {\n    mdxType: \"TypesTable\"\n  }, mdx(TypesProp, {\n    name: \"disabled\",\n    type: \"boolean\",\n    desc: \"standard input disabled flag\",\n    default: \"false\",\n    mdxType: \"TypesProp\"\n  }), mdx(TypesProp, {\n    name: \"error\",\n    type: \"boolean\",\n    desc: \"error state flag\",\n    default: \"false\",\n    mdxType: \"TypesProp\"\n  }), mdx(TypesProp, {\n    name: \"label\",\n    type: \"string\",\n    desc: \"identifying string for input\",\n    mdxType: \"TypesProp\"\n  }), mdx(TypesProp, {\n    name: \"placeholder\",\n    type: \"string\",\n    desc: \"in-field usage hint\",\n    mdxType: \"TypesProp\"\n  }), mdx(TypesProp, {\n    name: \"rows\",\n    type: \"number\",\n    desc: \"expand the viewable rows (height)\",\n    default: \"4\",\n    mdxType: \"TypesProp\"\n  }), mdx(TypesProp, {\n    name: \"subLabel\",\n    type: \"string\",\n    desc: \"supporting text or error messaging\",\n    mdxType: \"TypesProp\"\n  })));\n}\n;\nMDXContent.isMDXComponent = true;","frontmatter":{"name":"Text area","route":"/components/textarea"},"headings":[{"value":"Text area","depth":1},{"value":"Examples","depth":2},{"value":"Labels","depth":3},{"value":"Appearance","depth":3},{"value":"Disabled","depth":3},{"value":"Error","depth":3},{"value":"Rows","depth":3},{"value":"Accessibility","depth":2},{"value":"Props","depth":2}]}},"pageContext":{"slug":"/components/textarea/","version":"CHANGELOG"}},
    "staticQueryHashes": []}