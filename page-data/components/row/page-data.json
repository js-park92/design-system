{
    "componentChunkName": "component---src-templates-page-tsx",
    "path": "/components/row",
    "result": {"data":{"mdx":{"body":"var _excluded = [\"components\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar _frontmatter = {\n  \"name\": \"Row\",\n  \"route\": \"/components/row\"\n};\n\nvar makeShortcode = function makeShortcode(name) {\n  return function MDXDefaultShortcode(props) {\n    console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n    return mdx(\"div\", props);\n  };\n};\n\nvar TableOfContents = makeShortcode(\"TableOfContents\");\nvar Intro = makeShortcode(\"Intro\");\nvar Usage = makeShortcode(\"Usage\");\nvar CheckCircleFillIcon = makeShortcode(\"CheckCircleFillIcon\");\nvar WarningFilledIcon = makeShortcode(\"WarningFilledIcon\");\nvar TypesTable = makeShortcode(\"TypesTable\");\nvar TypesProp = makeShortcode(\"TypesProp\");\nvar TypesEnum = makeShortcode(\"TypesEnum\");\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"h1\", {\n    \"id\": \"row\"\n  }, \"Row\"), mdx(TableOfContents, _extends({}, props, {\n    mdxType: \"TableOfContents\"\n  })), mdx(Intro, {\n    mdxType: \"Intro\"\n  }, \"A row is a summary representation of a piece of content in a vertical list of related content.\"), mdx(Usage, {\n    figmaUrl: \"https://www.figma.com/file/YsTklBecdddy9RZ3HXddIseD/?node-id=10235%3A29994\",\n    install: \"npm install @pluralsight/ps-design-system-row\",\n    import: \"import Row from '@pluralsight/ps-design-system-row'\",\n    packageName: \"row\",\n    version: props.version,\n    mdxType: \"Usage\"\n  }), mdx(\"h2\", {\n    \"id\": \"examples\"\n  }, \"Examples\"), mdx(\"h3\", {\n    \"id\": \"flexibility\"\n  }, \"Flexibility\"), mdx(\"p\", null, \"The row is a flexible component that will expand to fit the container it's in. The height and width will grow indefinitely. Define your own constrains with parent elements\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-typescript\"\n  }, \"import Row from '@pluralsight/ps-design-system-row'\\nimport Button from '@pluralsight/ps-design-system-button'\\nimport { BookmarkIcon, MoreIcon, PlayCircleIcon } from '@pluralsight/ps-design-system-icon'\\n\\nfunction Example() {\\n  return (\\n    <>\\n      <Row\\n        fullOverlay={\\n          <Row.FullOverlayLink>\\n            <a href=\\\"#\\\"><PlayCircleIcon size=\\\"large\\\" style={{ color: '#fff' }}/></a>\\n          </Row.FullOverlayLink>\\n        }\\n        title=<Row.TextLink>\\n          <a href=\\\"https://app.pluralsight.com/library/courses/angular-2-getting-started-update/table-of-contents\\\">Angular: Getting Started</a>\\n        </Row.TextLink>\\n        progress={0}\\n        image={\\n          <Row.Image src=\\\"https://pluralsight.imgix.net/course-images/angular-2-getting-started-update-v1.jpg\\\" />\\n        }\\n        metadata1={[\\n          <Row.TextLink><a href=\\\"#\\\">Deborah Kurata</a></Row.TextLink>,\\n          'Beginner',\\n          'Aug 5, 2020'\\n        ]}\\n        actionBar={[\\n          <Button\\n            size={Button.sizes.small}\\n            appearance={Button.appearances.flat}\\n            key=\\\"bookmark\\\"\\n            icon={<BookmarkIcon />}\\n          />,\\n          <Button\\n            size={Button.sizes.small}\\n            appearance={Button.appearances.flat}\\n            key=\\\"more\\\"\\n            icon={<MoreIcon />}\\n          />\\n        ]}\\n        actionBarVisible\\n      />\\n      <Row\\n      fullOverlay={\\n        <Row.FullOverlayLink>\\n          <a href=\\\"#\\\"><PlayCircleIcon size=\\\"large\\\" style={{ color: '#fff' }}/></a>\\n        </Row.FullOverlayLink>\\n      }\\n        title={<Row.TextLink>\\n          <a href=\\\"https://app.pluralsight.com/library/courses/csharp-fundamentals-dev/table-of-contents\\\">C# Fundamentals</a>\\n        </Row.TextLink>}\\n        progress={20}\\n        image={\\n          <Row.Image src=\\\"https://pluralsight.imgix.net/course-images/csharp-fundamentals-dev-v1.png\\\" />\\n        }\\n        metadata1={[\\n          <Row.TextLink><a href=\\\"#\\\">Scott Allen</a></Row.TextLink>,\\n          'Beginner',\\n          'Apr 15 2020'\\n        ]}\\n        actionBar={[\\n          <Button\\n            size={Button.sizes.small}\\n            appearance={Button.appearances.flat}\\n            key=\\\"bookmark\\\"\\n            icon={<BookmarkIcon />}\\n          />,\\n          <Button\\n            size={Button.sizes.small}\\n            appearance={Button.appearances.flat}\\n            key=\\\"more\\\"\\n            icon={<MoreIcon />}\\n          />\\n        ]}\\n        actionBarVisible\\n      />\\n      <Row\\n      fullOverlay={\\n        <Row.FullOverlayLink>\\n          <a href=\\\"#\\\"><PlayCircleIcon size=\\\"large\\\" style={{ color: '#fff' }}/></a>\\n        </Row.FullOverlayLink>\\n      }\\n        title={\\n          <Row.TextLink>\\n            <a href=\\\"https://app.pluralsight.com/library/courses/angular-2-getting-started-update/table-of-contents\\\">\\n              Angular Fundamentals\\n            </a>\\n          </Row.TextLink>\\n        }\\n        progress={67}\\n        image={\\n          <Row.Image src=\\\"https://pluralsight.imgix.net/course-images/angular-fundamentals-v1.jpg\\\" />\\n        }\\n        metadata1={[\\n          <Row.TextLink><a href=\\\"#\\\">Joe Eames, Jim Cooper</a></Row.TextLink>,\\n          'Intermediate',\\n          'Jan 31, 2019'\\n        ]}\\n        actionBar={[\\n          <Button\\n            size={Button.sizes.small}\\n            appearance={Button.appearances.flat}\\n            key=\\\"bookmark\\\"\\n            icon={<BookmarkIcon />}\\n          />,\\n          <Button\\n            size={Button.sizes.small}\\n            appearance={Button.appearances.flat}\\n            key=\\\"more\\\"\\n            icon={<MoreIcon />}\\n          />\\n        ]}\\n        actionBarVisible\\n      />\\n      <Row\\n      fullOverlay={\\n        <Row.FullOverlayLink>\\n          <a href=\\\"#\\\"><PlayCircleIcon size=\\\"large\\\" style={{ color: '#fff' }}/></a>\\n        </Row.FullOverlayLink>\\n      }\\n        title=\\n        {\\n          <Row.TextLink>\\n            <a href=\\\"https://app.pluralsight.com/library/courses/getting-started-python-core/table-of-contents\\\">\\n              Core Python: Getting Started\\n            </a>\\n          </Row.TextLink>\\n        }\\n        progress={100}\\n        metadata1={[\\n          <Row.TextLink><a href=\\\"#\\\">Robert Smallshire</a></Row.TextLink>,\\n          'Beginner',\\n          'Dec 11, 2019'\\n        ]}\\n        image={\\n          <Row.Image src=\\\"https://pluralsight.imgix.net/course-images/getting-started-python-core-v1.png\\\" />\\n        }\\n        actionBar={[\\n          <Button\\n            size={Button.sizes.small}\\n            appearance={Button.appearances.flat}\\n            key=\\\"bookmark\\\"\\n            icon={<BookmarkIcon />}\\n          />,\\n          <Button\\n            size={Button.sizes.small}\\n            appearance={Button.appearances.flat}\\n            key=\\\"more\\\"\\n            icon={<MoreIcon />}\\n          />\\n        ]}\\n        actionBarVisible\\n      />\\n    </>\\n  )\\n}\\nexport default Example\\n\")), mdx(\"h3\", {\n    \"id\": \"size\"\n  }, \"Size\"), mdx(\"p\", null, \"The size will determine certain base measurements.\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-typescript\"\n  }, \"import Row from '@pluralsight/ps-design-system-row'\\nimport Button from '@pluralsight/ps-design-system-button'\\n\\nfunction Example() {\\n  return (\\n    <>\\n      <Row\\n        size={Row.sizes.medium}\\n        title=\\\"Medium Row\\\"\\n        metadata1={['Jim Cooper']}\\n        image={\\n          <Row.Image src=\\\"https://pluralsight.imgix.net/course-images/angular-2-getting-started-update-v1.jpg\\\" />\\n        }\\n      />\\n      <Row\\n        size={Row.sizes.small}\\n        title=\\\"Small Row\\\"\\n        metadata1={['Jim Cooper']}\\n        image={\\n          <Row.Image src=\\\"https://pluralsight.imgix.net/course-images/angular-2-getting-started-update-v1.jpg\\\" />\\n        }\\n      />\\n    </>\\n  )\\n}\\nexport default Example\\n\")), mdx(\"h3\", {\n    \"id\": \"image\"\n  }, \"Image\"), mdx(\"p\", null, \"The image will cover the image area given. Image dimensions outside of this space will be clipped.\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-typescript\"\n  }, \"import Row from '@pluralsight/ps-design-system-row'\\nimport Button from '@pluralsight/ps-design-system-button'\\n\\nfunction Example() {\\n  return (\\n    <>\\n      <Row\\n        image={<Row.Image src=\\\"http://via.placeholder.com/350x150\\\" />}\\n        title=\\\"Wide image\\\"\\n      />\\n      <Row\\n        image={<Row.Image src=\\\"http://via.placeholder.com/200x400\\\" />}\\n        title=\\\"Tall image\\\"\\n      />\\n    </>\\n  )\\n}\\nexport default Example\\n\")), mdx(\"h3\", {\n    \"id\": \"progress\"\n  }, \"Progress\"), mdx(\"p\", null, \"Progress, if given, should be a number between 0 and 100 that describes the completion level of the content represented on the row.\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-typescript\"\n  }, \"import Row from '@pluralsight/ps-design-system-row'\\nimport Button from '@pluralsight/ps-design-system-button'\\n\\nfunction Example() {\\n  return (\\n    <>\\n      <Row\\n        progress={0}\\n        title=\\\"0% progress\\\"\\n        image={<Row.Image src=\\\"https://picsum.photos/seed/picsum/192/144\\\" />}\\n      />\\n      <Row\\n        progress={25}\\n        title=\\\"25% progress\\\"\\n        image={<Row.Image src=\\\"https://picsum.photos/seed/picsum/192/144\\\" />}\\n      />\\n      <Row\\n        progress={66.6666667}\\n        title=\\\"6.6666667% progress\\\"\\n        image={<Row.Image src=\\\"https://picsum.photos/seed/picsum/192/144\\\" />}\\n      />\\n      <Row\\n        progress={100}\\n        title=\\\"100% progress\\\"\\n        image={<Row.Image src=\\\"https://picsum.photos/seed/picsum/192/144\\\" />}\\n      />\\n    </>\\n  )\\n}\\nexport default Example\\n\")), mdx(\"h3\", {\n    \"id\": \"title\"\n  }, \"Title\"), mdx(\"p\", null, \"The title can be a string or a link.\"), mdx(\"p\", null, \"The title will grow indefinitely without truncating unless you use the \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"titleTruncated\"), \" prop which will limit the title to two lines.\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-typescript\"\n  }, \"import Row from '@pluralsight/ps-design-system-row'\\nimport Button from '@pluralsight/ps-design-system-button'\\n\\nfunction Example() {\\n  return (\\n    <>\\n      <Row\\n        title={\\n          <Row.TextLink>\\n            <a>Linked Title</a>\\n          </Row.TextLink>\\n        }\\n        image={<Row.Image src=\\\"https://picsum.photos/seed/picsum/192/144\\\" />}\\n      />\\n      <Row\\n        title=\\\"Untruncated Super Long Title of the Technology of the Century as Brought to You By Tech Groupsoft in the Stunning Desert of British Lithuania\\\"\\n        image={<Row.Image src=\\\"https://picsum.photos/seed/picsum/192/144\\\" />}\\n      />\\n      <Row\\n        title={\\n          <Row.TextLink>\\n            <a>\\n              Linked and Truncated Super Long Title of the Technology of the\\n              Century as Brought to You By Tech Groupsoft in the Stunning Desert\\n              of British Lithuania\\n            </a>\\n          </Row.TextLink>\\n        }\\n        titleTruncated\\n        image={<Row.Image src=\\\"https://picsum.photos/seed/picsum/192/144\\\" />}\\n      />\\n    </>\\n  )\\n}\\nexport default Example\\n\")), mdx(\"h3\", {\n    \"id\": \"metadata\"\n  }, \"Metadata\"), mdx(\"p\", null, \"Metadata is free-form strings or displayable elements like links. Each bit of metadata is separated by an interpunct.\"), mdx(\"p\", null, \"Metadata is constrained to a single line, overflowing with an ellipsis indicated. The first datum is given display space precedence.\"), mdx(\"p\", null, \"Metadata can be strings or links, defined by the \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"Row.TextLink\"), \" subcomponent.\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-typescript\"\n  }, \"import Row from '@pluralsight/ps-design-system-row'\\nimport Button from '@pluralsight/ps-design-system-button'\\n\\nfunction Example() {\\n  return (\\n    <>\\n      <Row\\n        metadata1={['Simon Allardice']}\\n        title=\\\"Row Title\\\"\\n        image={<Row.Image src=\\\"https://picsum.photos/seed/picsum/192/144\\\" />}\\n      />\\n      <Row\\n        metadata1={['Simon Allardice']}\\n        metadata2={['Intermediate', '2h 20m', 'July 24, 1847']}\\n        title=\\\"Row with Two Lines of Meta\\\"\\n        image={<Row.Image src=\\\"https://picsum.photos/seed/picsum/192/144\\\" />}\\n      />\\n      <Row\\n        metadata1={[\\n          <Row.TextLink>\\n            <a href=\\\"https://google.com?query=simon%20allardice\\\">\\n              The Honorable Simon Allardice Hailing From Shores Abroad\\n            </a>\\n          </Row.TextLink>\\n        ]}\\n        metadata2={[\\n          'Only about the Best Level in the World for Learning',\\n          '2h 20m or longer depending',\\n          \\\"July 24, 1847 or year thereabouts, it's unclear\\\"\\n        ]}\\n        title=\\\"Super-long Metadata\\\"\\n        image={<Row.Image src=\\\"https://picsum.photos/seed/picsum/192/144\\\" />}\\n      />\\n    </>\\n  )\\n}\\nexport default Example\\n\")), mdx(\"h3\", {\n    \"id\": \"action-bar\"\n  }, \"Action bar\"), mdx(\"p\", null, \"The action bar contains the on-row affordances a user can take besides linking straight to the content. These are usually buttons.\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-typescript\"\n  }, \"import Row from '@pluralsight/ps-design-system-row'\\nimport Button from '@pluralsight/ps-design-system-button'\\nimport { BookmarkIcon, MoreIcon } from '@pluralsight/ps-design-system-icon'\\n\\nfunction Example() {\\n  return (\\n    <>\\n      <Row\\n        actionBar={[\\n          <Button\\n            size={Button.sizes.small}\\n            appearance={Button.appearances.flat}\\n            key=\\\"bookmark\\\"\\n            icon={<BookmarkIcon />}\\n          />\\n        ]}\\n        title=\\\"Action bar appears on hover\\\"\\n        image={<Row.Image src=\\\"https://picsum.photos/seed/picsum/192/144\\\" />}\\n      />\\n      <Row\\n        actionBar={[\\n          <Button\\n            size={Button.sizes.small}\\n            appearance={Button.appearances.flat}\\n            key=\\\"bookmark\\\"\\n            icon={<BookmarkIcon />}\\n          />,\\n          <Button\\n            size={Button.sizes.small}\\n            appearance={Button.appearances.flat}\\n            key=\\\"more\\\"\\n            icon={<MoreIcon />}\\n          />\\n        ]}\\n        title=\\\"Multiple actions\\\"\\n        image={<Row.Image src=\\\"https://picsum.photos/seed/picsum/192/144\\\" />}\\n      />\\n      <Row\\n        actionBar={[\\n          <Button\\n            size={Button.sizes.small}\\n            appearance={Button.appearances.flat}\\n            key=\\\"bookmark\\\"\\n            icon={<BookmarkIcon />}\\n          />,\\n          <Button\\n            size={Button.sizes.small}\\n            appearance={Button.appearances.flat}\\n            key=\\\"more\\\"\\n            icon={<MoreIcon />}\\n          />\\n        ]}\\n        actionBarVisible\\n        title=\\\"Action bar locked visible\\\"\\n        image={<Row.Image src=\\\"https://picsum.photos/seed/picsum/192/144\\\" />}\\n      />\\n    </>\\n  )\\n}\\nexport default Example\\n\")), mdx(\"h2\", {\n    \"id\": \"accessibility\"\n  }, \"Accessibility\"), mdx(\"p\", null, mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"WCAG 2.1 AA Compliance\")), mdx(CheckCircleFillIcon, {\n    color: \"green\",\n    size: \"xSmall\",\n    mdxType: \"CheckCircleFillIcon\"\n  }), \" 100% axe-core tests\", mdx(\"br\", null), mdx(WarningFilledIcon, {\n    color: \"red\",\n    size: \"xSmall\",\n    mdxType: \"WarningFilledIcon\"\n  }), \" Manual audit\", mdx(\"h2\", {\n    \"id\": \"props\"\n  }, \"Props\"), mdx(\"h3\", {\n    \"id\": \"row-1\"\n  }, \"Row\"), mdx(TypesTable, {\n    mdxType: \"TypesTable\"\n  }, mdx(TypesProp, {\n    name: \"actionBar\",\n    type: \"Row.Action[]\",\n    desc: \"top-right action buttons\",\n    mdxType: \"TypesProp\"\n  }), mdx(TypesProp, {\n    name: \"actionBarVisible\",\n    type: \"boolean\",\n    desc: \"lock action bar on\",\n    default: \"false\",\n    mdxType: \"TypesProp\"\n  }), mdx(TypesProp, {\n    name: \"fullOverlay\",\n    type: \"Row.FullOverlayLink\",\n    desc: \"hover state for image\",\n    mdxType: \"TypesProp\"\n  }), mdx(TypesProp, {\n    name: \"fullOverlayVisible\",\n    type: \"boolean\",\n    desc: \"lock full overlay on\",\n    default: \"false\",\n    mdxType: \"TypesProp\"\n  }), mdx(TypesProp, {\n    name: \"image\",\n    required: true,\n    type: \"Row.Image | Row.ImageLink > a > Row.Image\",\n    desc: \"main image or linked image\",\n    mdxType: \"TypesProp\"\n  }), mdx(TypesProp, {\n    name: \"metadata1\",\n    type: \"string[] | React.ReactNode[]\",\n    desc: \"first row of metadata\",\n    mdxType: \"TypesProp\"\n  }), mdx(TypesProp, {\n    name: \"metadata2\",\n    type: \"string[] | React.ReactNode[]\",\n    desc: \"second row of metadata\",\n    mdxType: \"TypesProp\"\n  }), mdx(TypesProp, {\n    name: \"progress\",\n    type: \"number\",\n    desc: \"progress 0-100\",\n    mdxType: \"TypesProp\"\n  }), mdx(TypesProp, {\n    name: \"size\",\n    type: mdx(TypesEnum, {\n      enum: Row.sizes,\n      mdxType: \"TypesEnum\"\n    }),\n    desc: \"size of row (from Row.sizes)\",\n    default: \"medium\",\n    mdxType: \"TypesProp\"\n  }), mdx(TypesProp, {\n    name: \"title\",\n    required: true,\n    type: \"Row.TextLink > a > Row.Title | Row.Title\",\n    desc: \"row title or linked title\",\n    mdxType: \"TypesProp\"\n  }), mdx(TypesProp, {\n    name: \"titleTruncated\",\n    required: true,\n    type: \"boolean\",\n    desc: \"limit title to 2 lines\",\n    default: \"false\",\n    mdxType: \"TypesProp\"\n  })), mdx(\"h3\", {\n    \"id\": \"rowimage\"\n  }, \"Row.Image\"), mdx(TypesTable, {\n    mdxType: \"TypesTable\"\n  }, mdx(TypesProp, {\n    name: \"src\",\n    required: true,\n    type: \"string\",\n    desc: \"image url\",\n    mdxType: \"TypesProp\"\n  })));\n}\n;\nMDXContent.isMDXComponent = true;","frontmatter":{"name":"Row","route":"/components/row"},"headings":[{"value":"Row","depth":1},{"value":"Examples","depth":2},{"value":"Flexibility","depth":3},{"value":"Size","depth":3},{"value":"Image","depth":3},{"value":"Progress","depth":3},{"value":"Title","depth":3},{"value":"Metadata","depth":3},{"value":"Action bar","depth":3},{"value":"Accessibility","depth":2},{"value":"Props","depth":2},{"value":"Row","depth":3},{"value":"Row.Image","depth":3}]}},"pageContext":{"slug":"/components/row/","version":"CHANGELOG"}},
    "staticQueryHashes": []}