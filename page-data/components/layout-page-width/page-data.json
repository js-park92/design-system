{
    "componentChunkName": "component---src-templates-page-tsx",
    "path": "/components/layout-page-width",
    "result": {"data":{"mdx":{"body":"var _excluded = [\"components\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar _frontmatter = {\n  \"name\": \"Page width\",\n  \"route\": \"/components/layout-page-width\"\n};\n\nvar makeShortcode = function makeShortcode(name) {\n  return function MDXDefaultShortcode(props) {\n    console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n    return mdx(\"div\", props);\n  };\n};\n\nvar Intro = makeShortcode(\"Intro\");\nvar Usage = makeShortcode(\"Usage\");\nvar TableOfContents = makeShortcode(\"TableOfContents\");\nvar TypesTable = makeShortcode(\"TypesTable\");\nvar TypesProp = makeShortcode(\"TypesProp\");\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"h1\", {\n    \"id\": \"page-width\"\n  }, \"Page width\"), mdx(Intro, {\n    mdxType: \"Intro\"\n  }, \"This layout will help you consistently match the max width of the site and the standard margins and it supports full-bleed backgrounds.\"), mdx(Usage, {\n    figmaUrl: \"https://www.figma.com/file/YsTklBecdddy9RZ3HXddIseD/PSDS-Web-Components?node-id=13885%3A38915\",\n    install: \"npm install @pluralsight/ps-design-system-layout\",\n    import: \"import { PageWidthLayout } from '@pluralsight/ps-design-system-layout\",\n    packageName: \"layout\",\n    version: props.version,\n    mdxType: \"Usage\"\n  }), mdx(TableOfContents, _extends({}, props, {\n    mdxType: \"TableOfContents\"\n  })), mdx(\"h2\", {\n    \"id\": \"example\"\n  }, \"Example\"), mdx(\"p\", null, \"Maintain standard margins and max-width with or without a full-bleed background.\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-typescript\"\n  }, \"import { colorsPink, colorsPurple, layout } from '@pluralsight/ps-design-system-core'\\nimport { PageWidthLayout } from '@pluralsight/ps-design-system-layout'\\nimport { P } from '@pluralsight/ps-design-system-text'\\nimport Theme from '@pluralsight/ps-design-system-theme'\\nimport React from 'react'\\n\\nconst Example: React.FC = props => {\\n  return (\\n    <React.Fragment>\\n      <Theme name={Theme.names.dark}>\\n        <header className=\\\"header\\\">\\n          <PageWidthLayout>\\n            <div className=\\\"outline\\\">\\n              <P>Contents in front of full-bleed background</P>\\n            </div>\\n          </PageWidthLayout>\\n        </header>\\n      </Theme>\\n\\n      <PageWidthLayout>\\n        <div className=\\\"outline\\\">\\n          <P>Normal case contents layout</P>\\n        </div>\\n      </PageWidthLayout>\\n\\n      <style jsx>{`\\n        .header {\\n          background: ${colorsPurple[7]};\\n        }\\n        .outline {\\n          border: 2px dashed ${colorsPink[6]};\\n          min-height: 150px;\\n          padding: ${layout.spacingSmall} 0;\\n        }\\n      `}</style>\\n    </React.Fragment>\\n  )\\n}\\n\\nexport default Example\\n\")), mdx(\"h2\", {\n    \"id\": \"props\"\n  }, \"Props\"), mdx(TypesTable, {\n    mdxType: \"TypesTable\"\n  }, mdx(TypesProp, {\n    name: \"children\",\n    type: \"React.ReactNode\",\n    desc: \"content\",\n    required: true,\n    mdxType: \"TypesProp\"\n  })));\n}\n;\nMDXContent.isMDXComponent = true;","frontmatter":{"name":"Page width","route":"/components/layout-page-width"},"headings":[{"value":"Page width","depth":1},{"value":"Example","depth":2},{"value":"Props","depth":2}]}},"pageContext":{"slug":"/components/layout-page-width/","version":"CHANGELOG"}},
    "staticQueryHashes": []}