{
    "componentChunkName": "component---src-templates-page-tsx",
    "path": "/components/theme",
    "result": {"data":{"mdx":{"body":"var _excluded = [\"components\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar _frontmatter = {\n  \"name\": \"Theme\",\n  \"route\": \"/components/theme\"\n};\n\nvar makeShortcode = function makeShortcode(name) {\n  return function MDXDefaultShortcode(props) {\n    console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n    return mdx(\"div\", props);\n  };\n};\n\nvar TableOfContents = makeShortcode(\"TableOfContents\");\nvar Intro = makeShortcode(\"Intro\");\nvar Usage = makeShortcode(\"Usage\");\nvar TypesTable = makeShortcode(\"TypesTable\");\nvar TypesProp = makeShortcode(\"TypesProp\");\nvar TypesEnum = makeShortcode(\"TypesEnum\");\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"h1\", {\n    \"id\": \"theme\"\n  }, \"Theme\"), mdx(TableOfContents, _extends({}, props, {\n    mdxType: \"TableOfContents\"\n  })), mdx(Intro, {\n    mdxType: \"Intro\"\n  }, \"The Theme component can change the theme (dark/light) for a page or subset of themeable components.\"), mdx(Usage, {\n    install: \"npm install @pluralsight/ps-design-system-theme\",\n    import: \"import Theme from '@pluralsight/ps-design-system-theme'\",\n    packageName: \"theme\",\n    version: props.version,\n    mdxType: \"Usage\"\n  }), mdx(\"h2\", {\n    \"id\": \"examples\"\n  }, \"Examples\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-typescript\",\n    \"metastring\": \"noRender startExpanded\",\n    \"noRender\": true,\n    \"startExpanded\": true\n  }, \"import Theme from '@pluralsight/ps-design-system-theme'\\nimport React from 'react'\\n\\nimport { ThemedComponent } from './some/component/path'\\n\\nconst Example: React.FC = props => {\\n  return (\\n    <Theme name={Theme.names.light}>\\n      <div>\\n        <ThemedComponent />\\n      </div>\\n    </Theme>\\n  )\\n}\\n\\nexport default Example\\n\")), mdx(\"h2\", {\n    \"id\": \"props\"\n  }, \"Props\"), mdx(TypesTable, {\n    mdxType: \"TypesTable\"\n  }, mdx(TypesProp, {\n    name: \"name\",\n    type: mdx(TypesEnum, {\n      enum: Theme.names,\n      mdxType: \"TypesEnum\"\n    }),\n    desc: \"controls which theme is used in child components\",\n    default: Theme.defaultName,\n    mdxType: \"TypesProp\"\n  })));\n}\n;\nMDXContent.isMDXComponent = true;","frontmatter":{"name":"Theme","route":"/components/theme"},"headings":[{"value":"Theme","depth":1},{"value":"Examples","depth":2},{"value":"Props","depth":2}]}},"pageContext":{"slug":"/components/theme/","version":"8.1.23"}},
    "staticQueryHashes": []}