{
    "componentChunkName": "component---src-templates-page-tsx",
    "path": "/components/searchinput",
    "result": {"data":{"mdx":{"body":"var _excluded = [\"components\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar _frontmatter = {\n  \"name\": \"Search input\",\n  \"route\": \"/components/searchinput\"\n};\n\nvar makeShortcode = function makeShortcode(name) {\n  return function MDXDefaultShortcode(props) {\n    console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n    return mdx(\"div\", props);\n  };\n};\n\nvar Intro = makeShortcode(\"Intro\");\nvar Usage = makeShortcode(\"Usage\");\nvar TableOfContents = makeShortcode(\"TableOfContents\");\nvar Guideline = makeShortcode(\"Guideline\");\nvar CheckCircleFillIcon = makeShortcode(\"CheckCircleFillIcon\");\nvar WarningFilledIcon = makeShortcode(\"WarningFilledIcon\");\nvar A = makeShortcode(\"A\");\nvar TypesTable = makeShortcode(\"TypesTable\");\nvar TypesProp = makeShortcode(\"TypesProp\");\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"h1\", {\n    \"id\": \"search-input\"\n  }, \"Search Input\"), mdx(Intro, {\n    mdxType: \"Intro\"\n  }, \"A text input specific for search.\"), mdx(Usage, {\n    figmaUrl: \"https://www.figma.com/file/YsTklBecdddy9RZ3HXddIseD/PSDS-Web-Components?node-id=13432%3A528\",\n    install: \"npm install @pluralsight/ps-design-system-searchinput\",\n    import: \"import SearchInput from '@pluralsight/ps-design-system-searchinput'\",\n    packageName: \"searchinput\",\n    version: props.version,\n    mdxType: \"Usage\"\n  }), mdx(TableOfContents, _extends({}, props, {\n    mdxType: \"TableOfContents\"\n  })), mdx(\"h2\", {\n    \"id\": \"examples\"\n  }, \"Examples\"), mdx(\"h3\", {\n    \"id\": \"loading\"\n  }, \"Loading\"), mdx(\"p\", null, \"Replaces the search icon with a loading indicator\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-typescript\"\n  }, \"import React from 'react'\\nimport SearchInput from '@pluralsight/ps-design-system-searchinput'\\n\\nconst Comp = () => (\\n  <SearchInput loading placeholder=\\\"What are you looking for?\\\" />\\n)\\n\\nexport default Comp\\n\")), mdx(\"h3\", {\n    \"id\": \"clear-icon\"\n  }, \"Clear icon\"), mdx(\"p\", null, \"Providing a \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"onClear\"), \" prop will display a close icon.\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-typescript\"\n  }, \"import React from 'react'\\nimport SearchInput from '@pluralsight/ps-design-system-searchinput'\\n\\nconst Comp = () => {\\n  const [value, setValue] = React.useState('')\\n  return <SearchInput\\n    onClear={() => setValue('')}\\n    placeholder=\\\"Searching for?\\\"\\n    value={value}\\n    onChange={(evt: React.ChangeEvent<HTMLInputElement>) => {\\n      setValue(evt.target.value)\\n    }}\\n  />\\n}\\n\\nexport default Comp\\n\")), mdx(\"h3\", {\n    \"id\": \"enterkeyhint\"\n  }, \"enterKeyHint\"), mdx(\"p\", null, \"Virtual keyboards can change the label of the enter key. That label should match the functionality intended when the Enter key is pressed. Most of the time, the Enter key just means \\\"enter\\\". Sometimes it can mean \\\"done\\\" or \\\"go\\\" or one of the other \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"https://developer.mozilla.org/en-US/docs/Web/HTML/Global_attributes/enterkeyhint#values\"\n  }, \"enumerated values\"), \".\"), mdx(\"p\", null, \"If the \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"enterKeyHint\"), \" prop is not specified, the browser will try to make its best guess. This is one reason that SearchInput doesn't specify a default. The other is that the Design System tries to avoid determining semantics.\"), mdx(\"p\", null, \"Some users have gotten TypeScript errors related to \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"enterKeyHint\"), \". If you do, specify the prop based on the context of your application. You should not see an error since the \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"https://github.com/DefinitelyTyped/DefinitelyTyped/pull/48971/files#diff-32cfd8cb197872bcba371f5018185d2e75fa540b52cda2dd7d8ac12dcc021299R2095\"\n  }, \"changes to the @types/react@17\"), \".\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-typescript\"\n  }, \"import React from 'react'\\nimport SearchInput from '@pluralsight/ps-design-system-searchinput'\\n\\nconst Comp = () => (\\n  <SearchInput enterKeyHint=\\\"search\\\" placeholder=\\\"Search and press enter to be taken to the search results\\\" />\\n)\\n\\nexport default Comp\\n\")), mdx(\"h3\", {\n    \"id\": \"guidelines\"\n  }, \"Guidelines\"), mdx(\"p\", null, \"Exercise consistency and clarity with explicit placeholder text.\"), mdx(Guideline, {\n    do: mdx(SearchInput, {\n      placeholder: \"Search for people\",\n      mdxType: \"SearchInput\"\n    }),\n    dont: mdx(SearchInput, {\n      placeholder: \"Filter\",\n      mdxType: \"SearchInput\"\n    }),\n    mdxType: \"Guideline\"\n  }), mdx(\"p\", null, \"Use consistent theming to encourage visual hierarchy\"), mdx(Guideline, {\n    do: mdx(\"div\", {\n      style: {\n        background: colorsBackgroundDark[3],\n        borderRadius: '4px',\n        padding: layout.spacingLarge\n      }\n    }, mdx(Theme, {\n      mdxType: \"Theme\"\n    }, mdx(SearchInput, {\n      placeholder: \"Search for people\",\n      style: {\n        display: 'block',\n        width: '100%'\n      },\n      mdxType: \"SearchInput\"\n    }))),\n    dont: mdx(\"div\", {\n      style: {\n        background: colorsBackgroundDark[3],\n        borderRadius: '4px',\n        padding: layout.spacingLarge\n      }\n    }, mdx(Theme, {\n      name: \"light\",\n      mdxType: \"Theme\"\n    }, mdx(SearchInput, {\n      placeholder: \"Search for people\",\n      style: {\n        display: 'block',\n        width: '100%'\n      },\n      mdxType: \"SearchInput\"\n    }))),\n    mdxType: \"Guideline\"\n  }), mdx(\"h2\", {\n    \"id\": \"accessibility\"\n  }, \"Accessibility\"), mdx(\"p\", null, mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"WCAG 2.1 AA Compliance\")), mdx(CheckCircleFillIcon, {\n    color: \"green\",\n    size: \"xSmall\",\n    mdxType: \"CheckCircleFillIcon\"\n  }), \" 100% axe-core tests\", mdx(\"br\", null), mdx(WarningFilledIcon, {\n    color: \"red\",\n    size: \"xSmall\",\n    mdxType: \"WarningFilledIcon\"\n  }), \" Manual audit\", mdx(\"p\", null, \"WAI-ARIA Patterns: \", mdx(A, {\n    href: \"https://www.w3.org/TR/wai-aria-practices-1.2/#aria_lh_search\",\n    target: \"_blank\",\n    rel: \"noreferrer\",\n    mdxType: \"A\"\n  }, \"Search (landmark)\")), mdx(\"h2\", {\n    \"id\": \"props\"\n  }, \"Props\"), mdx(TypesTable, {\n    mdxType: \"TypesTable\"\n  }, mdx(TypesProp, {\n    name: \"label\",\n    type: \"string\",\n    desc: \"non-standard above-field label\",\n    mdxType: \"TypesProp\"\n  }), mdx(TypesProp, {\n    name: \"onClear\",\n    type: \"function\",\n    desc: \"show clear button and trigger when button is clicked\",\n    mdxType: \"TypesProp\"\n  }), mdx(TypesProp, {\n    name: \"error\",\n    type: \"boolean\",\n    desc: \"show error state\",\n    default: \"false\",\n    mdxType: \"TypesProp\"\n  }), mdx(TypesProp, {\n    name: \"loading\",\n    type: \"boolean\",\n    desc: \"show progress indicator\",\n    default: \"false\",\n    mdxType: \"TypesProp\"\n  }), mdx(TypesProp, {\n    name: \"placeholder\",\n    type: \"string\",\n    desc: \"standard in-field usage hint\",\n    mdxType: \"TypesProp\"\n  }), mdx(TypesProp, {\n    name: \"subLabel\",\n    type: \"string\",\n    desc: \"non-standard below-field label or error message\",\n    mdxType: \"TypesProp\"\n  })));\n}\n;\nMDXContent.isMDXComponent = true;","frontmatter":{"name":"Search input","route":"/components/searchinput"},"headings":[{"value":"Search Input","depth":1},{"value":"Examples","depth":2},{"value":"Loading","depth":3},{"value":"Clear icon","depth":3},{"value":"enterKeyHint","depth":3},{"value":"Guidelines","depth":3},{"value":"Accessibility","depth":2},{"value":"Props","depth":2}]}},"pageContext":{"slug":"/components/searchinput/","version":"CHANGELOG"}},
    "staticQueryHashes": []}