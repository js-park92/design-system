{
    "componentChunkName": "component---src-templates-page-tsx",
    "path": "/components/card",
    "result": {"data":{"mdx":{"body":"var _excluded = [\"components\"];\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar _frontmatter = {\n  \"name\": \"Card\",\n  \"route\": \"/components/card\"\n};\n\nvar makeShortcode = function makeShortcode(name) {\n  return function MDXDefaultShortcode(props) {\n    console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n    return mdx(\"div\", props);\n  };\n};\n\nvar TableOfContents = makeShortcode(\"TableOfContents\");\nvar Intro = makeShortcode(\"Intro\");\nvar Usage = makeShortcode(\"Usage\");\nvar CheckCircleFillIcon = makeShortcode(\"CheckCircleFillIcon\");\nvar WarningFilledIcon = makeShortcode(\"WarningFilledIcon\");\nvar TypesTable = makeShortcode(\"TypesTable\");\nvar TypesProp = makeShortcode(\"TypesProp\");\nvar TypesEnum = makeShortcode(\"TypesEnum\");\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var _mdx;\n\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"h1\", {\n    \"id\": \"card\"\n  }, \"Card\"), mdx(TableOfContents, _extends({}, props, {\n    mdxType: \"TableOfContents\"\n  })), mdx(Intro, {\n    mdxType: \"Intro\"\n  }, \"A card is a summary representation of a piece of content and typically is used in a horizontal row or grid of related content.\"), mdx(Usage, {\n    figmaUrl: \"https://www.figma.com/file/YsTklBecdddy9RZ3HXddIseD/?node-id=10235%3A29844\",\n    install: \"npm install @pluralsight/ps-design-system-card\",\n    import: \"import Avatar from '@pluralsight/ps-design-system-card'\",\n    packageName: \"card\",\n    version: props.version,\n    mdxType: \"Usage\"\n  }), mdx(\"h2\", {\n    \"id\": \"examples\"\n  }, \"Examples\"), mdx(\"h3\", {\n    \"id\": \"in-app-example\"\n  }, \"In-app example\"), mdx(\"p\", null, \"The card is a flexible component that will fit the container it's given. A gallery is a common container layout that one might encounter in the product. This is an example implementation of how the Card might look in a gallery in your app, using the \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"/components/layout\"\n  }, \"Layout.EqualColumnLayout\"), \" component.\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-typescript\"\n  }, \"import Avatar from '@pluralsight/ps-design-system-avatar'\\nimport Card from '@pluralsight/ps-design-system-card'\\nimport { BookmarkIcon, MoreIcon, PathIcon, PlayCircleIcon } from '@pluralsight/ps-design-system-icon'\\nimport { EqualColumnLayout } from '@pluralsight/ps-design-system-layout'\\n\\nfunction Example() {\\n  return (\\n    <EqualColumnLayout>\\n      <ul>\\n        <li>\\n          <Card\\n            tag={<Card.Tag icon={<PathIcon />}>Path</Card.Tag>}\\n            title={<Card.Title>Advanced TypeScript</Card.Title>}\\n            progress={0}\\n            image={\\n              <Card.Image src=\\\"https://picsum.photos/seed/picsum/540/360\\\" aria-label=\\\"img desc\\\" />\\n            }\\n            metadata1={['Brice Wilson', 'Advanced']}\\n            metadata2={['0m watched']}\\n            size={Card.sizes.small}\\n          />\\n        </li>\\n        <li>\\n          <Card\\n            bonusBar={<Avatar size={Avatar.sizes.xSmall} name=\\\"Jake Trent\\\" />}\\n            title={\\n              <Card.Title>\\n                Getting Started with Reactive Programming Using RxJS\\n              </Card.Title>\\n            }\\n            progress={20}\\n            image={\\n              <Card.Image src=\\\"https://picsum.photos/seed/picsum/540/360\\\" aria-label=\\\"img desc\\\" />\\n            }\\n            metadata1={['Scott Allen', 'Intermediate']}\\n            metadata2={['23m watched']}\\n            size={Card.sizes.small}\\n          />\\n        </li>\\n        <li>\\n          <Card\\n            actionBar={[\\n              <Card.Action\\n                key=\\\"1\\\"\\n                title=\\\"Book action\\\"\\n                icon={<BookmarkIcon />}\\n              />,\\n              <Card.Action key=\\\"2\\\" title=\\\"More action\\\" icon={<MoreIcon />} />\\n            ]}\\n            title={\\n              <Card.Title>\\n                Building a JavaScript Development Environment\\\"\\n              </Card.Title>\\n            }\\n            fullOverlay={\\n              <Card.FullOverlayLink>\\n                <a>\\n                  <PlayCircleIcon size={PlayCircleIcon.sizes.large} />\\n                </a>\\n              </Card.FullOverlayLink>\\n            }\\n            progress={67}\\n            image={\\n              <Card.Image src=\\\"https://picsum.photos/seed/picsum/540/360\\\" aria-label=\\\"img desc\\\" />\\n            }\\n            metadata1={['Cory House', 'Intermediate']}\\n            metadata2={['3h 23m watched']}\\n            size={Card.sizes.small}\\n          />\\n        </li>\\n        <li>\\n          <Card\\n            actionBar={[\\n              <Card.Action\\n                key=\\\"1\\\"\\n                title=\\\"Bookmark action\\\"\\n                icon={<BookmarkIcon />}\\n              />,\\n              <Card.Action key=\\\"2\\\" title=\\\"More action\\\" icon={<MoreIcon />} />\\n            ]}\\n            actionBarVisible\\n            title={<Card.Title>Webpack Fundamentals\\\"</Card.Title>}\\n            progress={100}\\n            metadata1={['Joe Eames', 'Intermediate']}\\n            metadata2={['90m watched']}\\n            image={\\n              <Card.Image src=\\\"https://picsum.photos/seed/picsum/540/360\\\" aria-label=\\\"img desc\\\" />\\n            }\\n            size={Card.sizes.small}\\n          />\\n        </li>\\n      </ul>\\n    </EqualColumnLayout>\\n  )\\n}\\n\\nexport default Example\\n\")), mdx(\"h3\", {\n    \"id\": \"size\"\n  }, \"Size\"), mdx(\"p\", null, \"While the component is flexible, the size will determine certain base proportions and flexibility min and max bounds.\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-typescript\"\n  }, \"import Card from '@pluralsight/ps-design-system-card'\\nimport React from 'react'\\n\\nfunction Example() {\\n  return (\\n    <div className=\\\"example-grid--spaced\\\">\\n      <div style={{ maxWidth: '540px' }}>\\n        <Card\\n          size={Card.sizes.large}\\n          title={<Card.Title>Large card</Card.Title>}\\n          metadata1={['Jim Cooper']}\\n          image={<Card.Image src=\\\"https://picsum.photos/seed/picsum/540/360\\\" aria-label=\\\"img desc\\\" />}\\n        />\\n      </div>\\n      <div style={{ maxWidth: '320px' }}>\\n        <Card\\n          size={Card.sizes.medium}\\n          title={<Card.Title>Medium card</Card.Title>}\\n          metadata1={['Jim Cooper']}\\n          image={<Card.Image src=\\\"https://picsum.photos/seed/picsum/540/360\\\" aria-label=\\\"img desc\\\" />}\\n        />\\n      </div>\\n      <div style={{ maxWidth: '140px' }}>\\n        <Card\\n          size={Card.sizes.small}\\n          title={<Card.Title>Small card</Card.Title>}\\n          metadata1={['Jim Cooper']}\\n          image={<Card.Image src=\\\"https://picsum.photos/seed/picsum/540/360\\\" aria-label=\\\"img desc\\\" />}\\n        />\\n      </div>\\n    </div>\\n  )\\n}\\n\\nexport default Example\\n\")), mdx(\"h3\", {\n    \"id\": \"image\"\n  }, \"Image\"), mdx(\"p\", null, \"The image will cover the space given. This space is variable width but set height according to the \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"size\"), \" property.\"), mdx(\"p\", null, \"To ensure screen-readable text, always pass \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"aria-label\"), \" for the image description.\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-typescript\"\n  }, \"import Button from '@pluralsight/ps-design-system-button'\\nimport Card from '@pluralsight/ps-design-system-card'\\nimport { BookmarkIcon } from '@pluralsight/ps-design-system-icon'\\nimport React from 'react'\\n\\nfunction Example() {\\n  return (\\n    <div style={{ maxWidth: '320px' }}>\\n      <Card\\n        image={\\n          <Card.ImageLink>\\n            <a href=\\\"https://google.com\\\" target=\\\"_blank\\\">\\n              <Card.Image src=\\\"https://picsum.photos/seed/picsum/540/360\\\" aria-label=\\\"img desc\\\" />\\n            </a>\\n          </Card.ImageLink>\\n        }\\n        title={<Card.Title>Linked image with other overlays</Card.Title>}\\n        actionBar={[\\n          <Card.Action\\n            key=\\\"1\\\"\\n            title=\\\"Bookmark action\\\"\\n            icon={<BookmarkIcon />}\\n          />\\n        ]}\\n        fullOverlay={\\n          <Card.FullOverlayLink>\\n            <a href=\\\"https://google.com?q=full%20overlay\\\" target=\\\"_blank\\\">\\n              Full Overlay\\n            </a>\\n          </Card.FullOverlayLink>\\n        }\\n      />\\n    </div>\\n  )\\n}\\n\\nexport default Example\\n\")), mdx(\"h3\", {\n    \"id\": \"progress\"\n  }, \"Progress\"), mdx(\"p\", null, \"Progress, if given, should be a number between 0 and 100 that describes the completion level of the content represented on the card.\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-typescript\"\n  }, \"import Card from '@pluralsight/ps-design-system-card'\\nimport React from 'react'\\n\\nfunction Example() {\\n  return (\\n    <div className=\\\"example-grid--col-2\\\">\\n      <div style={{ width: '320px' }}>\\n        <Card\\n          progress={25}\\n          title={<Card.Title>The Card Title</Card.Title>}\\n          image={<Card.Image src=\\\"https://picsum.photos/seed/picsum/540/360\\\" aria-label=\\\"img desc\\\" />}\\n        />\\n      </div>\\n      <div style={{ width: '320px' }}>\\n        <Card\\n          progress={100}\\n          title={<Card.Title>The Card Title</Card.Title>}\\n          image={<Card.Image src=\\\"https://picsum.photos/seed/picsum/540/360\\\" aria-label=\\\"img desc\\\" />}\\n        />\\n      </div>\\n    </div>\\n  )\\n}\\n\\nexport default Example\\n\")), mdx(\"h3\", {\n    \"id\": \"title\"\n  }, \"Title\"), mdx(\"p\", null, \"The title can be a string or a some other element, such as a link, that contains a string\"), mdx(\"p\", null, \"Strings are line-clamped to 2 lines max, then the text will overflow with an ellipsis appended.\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-typescript\"\n  }, \"import Card from '@pluralsight/ps-design-system-card'\\nimport React from 'react'\\n\\nfunction Example() {\\n  return (\\n    <div className=\\\"example-grid--col-2\\\">\\n      <div style={{ width: '320px' }}>\\n        <Card\\n          title={\\n            <Card.Title>\\n              Super Long Title of the Technology of the Century as Brought to\\n              You By Tech Groupsoft in the Stunning Desert of British Lithuania\\n            </Card.Title>\\n          }\\n          image={<Card.Image src=\\\"https://picsum.photos/seed/picsum/540/360\\\" aria-label=\\\"img desc\\\" />}\\n        />\\n      </div>\\n      <div style={{ width: '320px' }}>\\n        <Card\\n          title={\\n            <Card.TextLink>\\n              <a>\\n                <Card.Title>\\n                  Link with Super Long Title of the Technology of the Century as\\n                  Brought to You By Tech Groupsoft in the Stunning Desert of\\n                  British Lithuania\\n                </Card.Title>\\n              </a>\\n            </Card.TextLink>\\n          }\\n          image={<Card.Image src=\\\"https://picsum.photos/seed/picsum/540/360\\\" aria-label=\\\"img desc\\\" />}\\n        />\\n      </div>\\n    </div>\\n  )\\n}\\n\\nexport default Example\\n\")), mdx(\"h3\", {\n    \"id\": \"metadata\"\n  }, \"Metadata\"), mdx(\"p\", null, \"Metadata is free-form strings or displayable elements like links. Each bit of metadata is separated by an interpunct.\"), mdx(\"p\", null, \"Metadata is constrained to a single line, overflowing with an ellipsis indicated. The first datum is given display space precedence.\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-typescript\"\n  }, \"import Card from '@pluralsight/ps-design-system-card'\\nimport React from 'react'\\n\\nfunction Example() {\\n  return (\\n    <div className=\\\"example-grid--col-2\\\">\\n      <div style={{ width: '320px' }}>\\n        <Card\\n          metadata1={['Simon Allardice']}\\n          metadata2={['Intermediate', '2h 20m', 'July 24, 1847']}\\n          title={<Card.Title>Card with Two Lines of Meta</Card.Title>}\\n          image={<Card.Image src=\\\"https://picsum.photos/seed/picsum/540/360\\\" aria-label=\\\"img desc\\\" />}\\n        />\\n      </div>\\n      <div style={{ width: '320px' }}>\\n        <Card\\n          metadata1={[\\n            <Card.TextLink>\\n              <a href=\\\"https://google.com?query=simon%20allardice\\\">\\n                The Honorable Simon Allardice Hailing From Shores Abroad\\n              </a>\\n            </Card.TextLink>\\n          ]}\\n          metadata2={[\\n            'Only about the Best Level in the World for Learning',\\n            '2h 20m or longer depending',\\n            \\\"July 24, 1847 or year thereabouts, it's unclear\\\"\\n          ]}\\n          title={<Card.Title>Super-long Metadata</Card.Title>}\\n          image={<Card.Image src=\\\"https://picsum.photos/seed/picsum/540/360\\\" aria-label=\\\"img desc\\\" />}\\n        />\\n      </div>\\n    </div>\\n  )\\n}\\n\\nexport default Example\\n\")), mdx(\"h3\", {\n    \"id\": \"action-bar\"\n  }, \"Action bar\"), mdx(\"p\", null, \"The action bar contains the on-card affordances a user can take besides linking straight to the content. These are usually buttons.\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-typescript\"\n  }, \"import Card from '@pluralsight/ps-design-system-card'\\nimport { BookmarkIcon, MoreIcon } from '@pluralsight/ps-design-system-icon'\\nimport React from 'react'\\n\\nfunction Example() {\\n  return (\\n    <div style={{ width: '320px' }}>\\n      <Card\\n        actionBar={[\\n          <Card.Action title=\\\"Bookmark action\\\" icon={<BookmarkIcon />} />,\\n          <Card.Action title=\\\"More action\\\" icon={<MoreIcon />} />\\n        ]}\\n        actionBarVisible\\n        title={<Card.Title>Action bar locked visible</Card.Title>}\\n        image={<Card.Image src=\\\"https://picsum.photos/seed/picsum/540/360\\\" aria-label=\\\"img desc\\\" />}\\n      />\\n    </div>\\n  )\\n}\\n\\nexport default Example\\n\")), mdx(\"h3\", {\n    \"id\": \"tag\"\n  }, \"Tag\"), mdx(\"p\", null, \"The tag provides a label, usually categorizing the card's content.\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-typescript\"\n  }, \"import Card from '@pluralsight/ps-design-system-card'\\nimport { ChannelIcon } from '@pluralsight/ps-design-system-icon'\\nimport React from 'react'\\n\\nfunction Example() {\\n  return (\\n    <div style={{ width: '320px' }}>\\n      <Card\\n        tag={<Card.Tag icon={<ChannelIcon />}>Channel</Card.Tag>}\\n        title={<Card.Title>Icon and text on card</Card.Title>}\\n        image={<Card.Image src=\\\"https://picsum.photos/seed/picsum/540/360\\\" aria-label=\\\"img desc\\\" />}\\n      />\\n    </div>\\n  )\\n}\\n\\nexport default Example\\n\")), mdx(\"h3\", {\n    \"id\": \"full-overlay\"\n  }, \"Full overlay\"), mdx(\"p\", null, \"A special main action representing the main interaction for the card can be provided here. It will appear overlaid in the center of the image.\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-typescript\"\n  }, \"import Card from '@pluralsight/ps-design-system-card'\\nimport { BookmarkIcon, ChannelIcon } from '@pluralsight/ps-design-system-icon'\\nimport React from 'react'\\n\\nfunction Example() {\\n  return (\\n    <div style={{ width: '320px' }}>\\n      <Card\\n        fullOverlay={\\n          <Card.FullOverlayLink>\\n            <a>Custom Thing</a>\\n          </Card.FullOverlayLink>\\n        }\\n        actionBar={[\\n          <Card.Action title=\\\"Bookmark action\\\" icon={<BookmarkIcon />} />\\n        ]}\\n        tag={<Card.Tag icon={<ChannelIcon />}>Channel</Card.Tag>}\\n        title={<Card.Title>Combined with other overlays</Card.Title>}\\n        image={<Card.Image src=\\\"https://picsum.photos/seed/picsum/540/360\\\" aria-label=\\\"img desc\\\" />}\\n      />\\n    </div>\\n  )\\n}\\n\\nexport default Example\\n\")), mdx(\"h3\", {\n    \"id\": \"bonus-bar\"\n  }, \"Bonus bar\"), mdx(\"p\", null, \"Some cards may make use of a freeform area of content overlaid in the bottom-left corner of the image area. Use with dignity.\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-typescript\"\n  }, \"import Card from '@pluralsight/ps-design-system-card'\\nimport React from 'react'\\n\\nfunction Example() {\\n  return (\\n    <div style={{ width: '320px' }}>\\n      <Card\\n        bonusBar={<div>Just bonus</div>}\\n        title={<Card.Title>Custom elements in lower-left</Card.Title>}\\n        image={<Card.Image src=\\\"https://picsum.photos/seed/picsum/540/360\\\" aria-label=\\\"img desc\\\" />}\\n      />\\n    </div>\\n  )\\n}\\n\\nexport default Example\\n\")), mdx(\"h2\", {\n    \"id\": \"accessibility\"\n  }, \"Accessibility\"), mdx(\"p\", null, mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"WCAG 2.1 AA Compliance\")), mdx(CheckCircleFillIcon, {\n    color: \"green\",\n    size: \"xSmall\",\n    mdxType: \"CheckCircleFillIcon\"\n  }), \" 100% axe-core tests\", mdx(\"br\", null), mdx(WarningFilledIcon, {\n    color: \"red\",\n    size: \"xSmall\",\n    mdxType: \"WarningFilledIcon\"\n  }), \" Manual audit\", mdx(\"h2\", {\n    \"id\": \"props\"\n  }, \"Props\"), mdx(\"h3\", {\n    \"id\": \"card-1\"\n  }, \"Card\"), mdx(TypesTable, {\n    mdxType: \"TypesTable\"\n  }, mdx(TypesProp, {\n    name: \"actionBar\",\n    type: \"Card.Action[]\",\n    desc: \"top-right action buttons\",\n    mdxType: \"TypesProp\"\n  }), mdx(TypesProp, {\n    name: \"actionBarVisible\",\n    type: \"boolean\",\n    desc: \"lock action bar on\",\n    default: \"false\",\n    mdxType: \"TypesProp\"\n  }), mdx(TypesProp, {\n    name: \"bonusBar\",\n    type: \"React.ReactNode\",\n    desc: \"freeform space in image bottom-left\",\n    mdxType: \"TypesProp\"\n  }), mdx(TypesProp, {\n    name: \"fullOverlay\",\n    type: \"Card.FullOverlayLink\",\n    desc: \"hover state for image\",\n    mdxType: \"TypesProp\"\n  }), mdx(TypesProp, {\n    name: \"fullOverlayVisible\",\n    type: \"boolean\",\n    desc: \"lock full overlay on\",\n    default: \"false\",\n    mdxType: \"TypesProp\"\n  }), mdx(TypesProp, {\n    name: \"image\",\n    required: true,\n    type: \"Card.Image | Card.ImageLink > a > Card.Image\",\n    desc: \"main image or linked image\",\n    mdxType: \"TypesProp\"\n  }), mdx(TypesProp, {\n    name: \"metadata1\",\n    type: \"string[] | React.ReactNode[]\",\n    desc: \"first row of metadata\",\n    mdxType: \"TypesProp\"\n  }), mdx(TypesProp, {\n    name: \"metadata2\",\n    type: \"string[] | React.ReactNode[]\",\n    desc: \"second row of metadata\",\n    mdxType: \"TypesProp\"\n  }), mdx(TypesProp, {\n    name: \"progress\",\n    type: \"number\",\n    desc: \"progress 0-100\",\n    mdxType: \"TypesProp\"\n  }), mdx(TypesProp, {\n    name: \"size\",\n    type: mdx(TypesEnum, {\n      enum: Card.sizes,\n      mdxType: \"TypesEnum\"\n    }),\n    desc: \"size of card (from Card.sizes)\",\n    default: \"medium\",\n    mdxType: \"TypesProp\"\n  }), mdx(TypesProp, {\n    name: \"tag\",\n    type: \"Card.Tag\",\n    desc: \"categorization label in top-left\",\n    mdxType: \"TypesProp\"\n  }), mdx(TypesProp, (_mdx = {\n    name: \"title\",\n    required: true\n  }, _defineProperty(_mdx, \"required\", true), _defineProperty(_mdx, \"type\", \"Card.TextLink > a > Card.Title | Card.Title\"), _defineProperty(_mdx, \"desc\", \"card title or linked title\"), _defineProperty(_mdx, \"mdxType\", \"TypesProp\"), _mdx))), mdx(\"h3\", {\n    \"id\": \"cardaction\"\n  }, \"Card.Action\"), mdx(TypesTable, {\n    mdxType: \"TypesTable\"\n  }, mdx(TypesProp, {\n    name: \"icon\",\n    required: true,\n    type: \"Icon\",\n    desc: \"icon representing action\",\n    mdxType: \"TypesProp\"\n  }), mdx(TypesProp, {\n    name: \"title\",\n    required: true,\n    mdxType: \"TypesProp\"\n  })), mdx(\"h3\", {\n    \"id\": \"cardimage\"\n  }, \"Card.Image\"), mdx(TypesTable, {\n    mdxType: \"TypesTable\"\n  }, mdx(TypesProp, {\n    name: \"aria-label\",\n    type: \"string\",\n    desc: \"screenreader label\",\n    mdxType: \"TypesProp\"\n  }), mdx(TypesProp, {\n    name: \"src\",\n    required: true,\n    type: \"string\",\n    desc: \"image url\",\n    mdxType: \"TypesProp\"\n  })), mdx(\"h3\", {\n    \"id\": \"cardtag\"\n  }, \"Card.Tag\"), mdx(TypesTable, {\n    mdxType: \"TypesTable\"\n  }, mdx(TypesProp, {\n    name: \"icon\",\n    type: \"Icon\",\n    desc: \"tag icon\",\n    mdxType: \"TypesProp\"\n  })));\n}\n;\nMDXContent.isMDXComponent = true;","frontmatter":{"name":"Card","route":"/components/card"},"headings":[{"value":"Card","depth":1},{"value":"Examples","depth":2},{"value":"In-app example","depth":3},{"value":"Size","depth":3},{"value":"Image","depth":3},{"value":"Progress","depth":3},{"value":"Title","depth":3},{"value":"Metadata","depth":3},{"value":"Action bar","depth":3},{"value":"Tag","depth":3},{"value":"Full overlay","depth":3},{"value":"Bonus bar","depth":3},{"value":"Accessibility","depth":2},{"value":"Props","depth":2},{"value":"Card","depth":3},{"value":"Card.Action","depth":3},{"value":"Card.Image","depth":3},{"value":"Card.Tag","depth":3}]}},"pageContext":{"slug":"/components/card/","version":"CHANGELOG"}},
    "staticQueryHashes": []}