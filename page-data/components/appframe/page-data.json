{
    "componentChunkName": "component---src-templates-page-tsx",
    "path": "/components/appframe",
    "result": {"data":{"mdx":{"body":"var _excluded = [\"components\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar _frontmatter = {\n  \"name\": \"App frame\",\n  \"route\": \"/components/appframe\"\n};\n\nvar makeShortcode = function makeShortcode(name) {\n  return function MDXDefaultShortcode(props) {\n    console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n    return mdx(\"div\", props);\n  };\n};\n\nvar Intro = makeShortcode(\"Intro\");\nvar Usage = makeShortcode(\"Usage\");\nvar TableOfContents = makeShortcode(\"TableOfContents\");\nvar TypesTable = makeShortcode(\"TypesTable\");\nvar TypesProp = makeShortcode(\"TypesProp\");\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"h1\", {\n    \"id\": \"app-frame\"\n  }, \"App frame\"), mdx(Intro, {\n    mdxType: \"Intro\"\n  }, \"The App Frame component provides page structure and integrates with other navigation components.\"), mdx(Usage, {\n    figmaUrl: \"https://www.figma.com/file/YsTklBecdddy9RZ3HXddIseD/PSDS-Web-Components?node-id=13897%3A39503\",\n    install: \"npm install @pluralsight/ps-design-system-appframe\",\n    import: \"import AppFrame from '@pluralsight/ps-design-system-appframe'\",\n    packageName: \"appframe\",\n    version: props.version,\n    mdxType: \"Usage\"\n  }), mdx(TableOfContents, _extends({}, props, {\n    mdxType: \"TableOfContents\"\n  })), mdx(\"h2\", {\n    \"id\": \"example\"\n  }, \"Example\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-typescript\",\n    \"metastring\": \"noRender\",\n    \"noRender\": true\n  }, \"<AppFrame topnav={<TopNav />} sidenav={<CustomSideNav />}>\\n  {/* page content here */}\\n</AppFrame>\\n\")), mdx(\"p\", null, \"If needed, you can control the the sidenav open state.\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-typescript\",\n    \"metastring\": \"noRender\",\n    \"noRender\": true\n  }, \"const [sidenavOpen, setOpen] = useState(false)\\n\\nconst close = () => setOpen(false)\\nconst open = () => setOpen(true)\\nconst toggle = sidenavOpen ? close : open\\n\\nreturn (\\n  <AppFrame\\n    onRequestSideNavClose={close}\\n    onRequestSideNavOpen={open}\\n    topnav={<TopNav onMobileMenuClick={toggle} />}\\n    sidenav={<CustomSideNav />}\\n    sidenavOpen={sidenavOpen}\\n  >\\n    {/* page content here */}\\n  </AppFrame>\\n)\\n\")), mdx(\"p\", null, \"A reference implementation of the Skills nav is available on \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"https://codesandbox.io/s/crazy-carson-pe50v?fontsize=14&hidenavigation=1&theme=dark&view=preview\"\n  }, \"codesandbox\")), mdx(\"iframe\", {\n    src: \"https://codesandbox.io/embed/crazy-carson-pe50v?fontsize=14&hidenavigation=1&theme=dark&view=preview\",\n    style: {\n      width: '100%',\n      height: 500,\n      border: 0,\n      borderRadius: 4,\n      overflow: 'hidden'\n    },\n    title: \"psds-skills-nav-example\",\n    allow: \"accelerometer; ambient-light-sensor; camera; encrypted-media; geolocation; gyroscope; hid; microphone; midi; payment; usb; vr; xr-spatial-tracking\",\n    sandbox: \"allow-forms allow-modals allow-popups allow-presentation allow-same-origin allow-scripts\"\n  }), mdx(\"h2\", {\n    \"id\": \"props\"\n  }, \"Props\"), mdx(TypesTable, {\n    mdxType: \"TypesTable\"\n  }, mdx(TypesProp, {\n    name: \"children\",\n    type: \"React.ReactNode\",\n    mdxType: \"TypesProp\"\n  }), mdx(TypesProp, {\n    name: \"onRequestSideNavClose\",\n    type: \"Event => void\",\n    desc: \"callback triggered when the sidenav should be closed. Use if controlling the open state\",\n    mdxType: \"TypesProp\"\n  }), mdx(TypesProp, {\n    name: \"onRequestSideNavOpen\",\n    type: \"Event => void\",\n    desc: \"callback triggered when the sidenav should be opened. Use if controlling the open state\",\n    mdxType: \"TypesProp\"\n  }), mdx(TypesProp, {\n    name: \"sidenav\",\n    type: \"React.ReactNode | ({ visible }) => React.ReactNode\",\n    desc: \"area to display secondary navigation\",\n    mdxType: \"TypesProp\"\n  }), mdx(TypesProp, {\n    name: \"sidenavOpen\",\n    type: \"boolean\",\n    desc: \"control if the sidenav container is opened\",\n    mdxType: \"TypesProp\"\n  }), mdx(TypesProp, {\n    name: \"topnav\",\n    type: \"React.ReactNode | ({ closeSidenav, openSidenav, sidenavOpen }) => React.ReactNode\",\n    desc: \"area to display primary navigation - such as a NavBar\",\n    mdxType: \"TypesProp\"\n  })));\n}\n;\nMDXContent.isMDXComponent = true;","frontmatter":{"name":"App frame","route":"/components/appframe"},"headings":[{"value":"App frame","depth":1},{"value":"Example","depth":2},{"value":"Props","depth":2}]}},"pageContext":{"slug":"/components/appframe/","version":"CHANGELOG"}},
    "staticQueryHashes": []}