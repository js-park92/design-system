{
    "componentChunkName": "component---src-templates-page-tsx",
    "path": "/components/carousel",
    "result": {"data":{"mdx":{"body":"var _excluded = [\"components\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar _frontmatter = {\n  \"name\": \"Carousel\",\n  \"route\": \"/components/carousel\"\n};\n\nvar makeShortcode = function makeShortcode(name) {\n  return function MDXDefaultShortcode(props) {\n    console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n    return mdx(\"div\", props);\n  };\n};\n\nvar TableOfContents = makeShortcode(\"TableOfContents\");\nvar Intro = makeShortcode(\"Intro\");\nvar Usage = makeShortcode(\"Usage\");\nvar Guideline = makeShortcode(\"Guideline\");\nvar CheckCircleFillIcon = makeShortcode(\"CheckCircleFillIcon\");\nvar WarningFilledIcon = makeShortcode(\"WarningFilledIcon\");\nvar A = makeShortcode(\"A\");\nvar TypesTable = makeShortcode(\"TypesTable\");\nvar TypesProp = makeShortcode(\"TypesProp\");\nvar TypesEnum = makeShortcode(\"TypesEnum\");\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"h1\", {\n    \"id\": \"carousel\"\n  }, \"Carousel\"), mdx(TableOfContents, _extends({}, props, {\n    mdxType: \"TableOfContents\"\n  })), mdx(Intro, {\n    mdxType: \"Intro\"\n  }, \"Carousels are for displaying a related set of content items in a row. Items can be paged using the next/previous buttons or by a swipe gesture.\"), mdx(Usage, {\n    figmaUrl: \"https://www.figma.com/file/YsTklBecdddy9RZ3HXddIseD/?node-id=10235%3A30030\",\n    install: \"npm install @pluralsight/ps-design-system-carousel\",\n    import: \"import Carousel from '@pluralsight/ps-design-system-carousel'\",\n    packageName: \"carousel\",\n    version: props.version,\n    mdxType: \"Usage\"\n  }), mdx(\"h2\", {\n    \"id\": \"examples\"\n  }, \"Examples\"), mdx(\"h3\", {\n    \"id\": \"size\"\n  }, \"Size\"), mdx(\"p\", null, \"The number and width of items in the Carousel are handled automatically.  Item min and max width constraints will adjust based on the \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"size\"), \" prop passed the Carousel. Similarly, the number of items in the Carousel can be controlled by constraining the width of a container element around the Carousel.\"), mdx(\"p\", null, \"The content that you pass as a child to \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"Carousel.Item\"), \" to be responsive. In the case of \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"Card\"), \", a common item child, the width is \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"100%\"), \", infinitely flexible. If not sufficiently flexible, the carousel will not look great. If the child can't expand to fill the item, the gutters will be off. If the child can't shrink to fit the item, the paging will be off.\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-typescript\"\n  }, \"import Card from '@pluralsight/ps-design-system-card'\\nimport Carousel from '@pluralsight/ps-design-system-carousel'\\nimport React from 'react'\\n\\nfunction Example() {\\n  return (\\n    Object.values(Carousel.sizes).map(size => (\\n      <Carousel size={size}>\\n        {MOCK_DATA.courses.map(course => (\\n          <Carousel.Item key={course.id}>\\n            <Card\\n              image={\\n                <Card.Image src=\\\"https://picsum.photos/seed/picsum/540/360\\\" />\\n              }\\n              metadata1={[course.author, course.level]}\\n              progress={randomInt()}\\n              title={<Card.Title>{course.title}</Card.Title>}\\n            />\\n          </Carousel.Item>\\n        ))}\\n      </Carousel>\\n    ))\\n  )\\n}\\n\\nexport default Example\\n\\nconst randomInt = (max = 100) => Math.floor(Math.random() * Math.floor(max))\\n\\nconst MOCK_DATA = {\\n  courses: [\\n    {\\n      author: 'Jim Cooper',\\n      id: '1',\\n      level: 'Intermediate',\\n      title: 'Vue.js Fundamentals'\\n    },\\n    {\\n      author: 'Mark Heath',\\n      id: '2',\\n      level: 'Intermediate',\\n      title: 'Azure Functions Fundamentals'\\n    },\\n    {\\n      author: 'Kyle Simpson',\\n      id: '3',\\n      level: 'Advanced',\\n      title: 'Advanced JavaScript'\\n    },\\n    {\\n      author: 'Mark Zamoyta',\\n      id: '4',\\n      level: 'Advanced',\\n      title: 'Rapid JavaScript Training'\\n    },\\n    {\\n      author: 'Dan Wahlin',\\n      id: '5',\\n      level: 'Advanced',\\n      title: 'Structuring JavaScript Code'\\n    },\\n    {\\n      author: 'Jim Cooper',\\n      id: '6',\\n      level: 'Advanced',\\n      title: 'JavaScript Objects and PropTypes'\\n    },\\n    {\\n      author: 'Jim Cooper',\\n      id: '11',\\n      level: 'Intermediate',\\n      title: 'Vue.js Fundamentals'\\n    },\\n    {\\n      author: 'Mark Heath',\\n      id: '12',\\n      level: 'Intermediate',\\n      title: 'Azure Functions Fundamentals'\\n    },\\n    {\\n      author: 'Kyle Simpson',\\n      id: '13',\\n      level: 'Advanced',\\n      title: 'Advanced JavaScript'\\n    },\\n    {\\n      author: 'Mark Zamoyta',\\n      id: '14',\\n      level: 'Advanced',\\n      title: 'Rapid JavaScript Training'\\n    },\\n    {\\n      author: 'Dan Wahlin',\\n      id: '15',\\n      level: 'Advanced',\\n      title: 'Structuring JavaScript Code'\\n    },\\n    {\\n      author: 'Jim Cooper',\\n      id: '16',\\n      level: 'Advanced',\\n      title: 'JavaScript Objects and PropTypes'\\n    },\\n    {\\n      author: 'Jim Cooper',\\n      id: '21',\\n      level: 'Intermediate',\\n      title: 'Vue.js Fundamentals'\\n    },\\n    {\\n      author: 'Mark Heath',\\n      id: '22',\\n      level: 'Intermediate',\\n      title: 'Azure Functions Fundamentals'\\n    },\\n    {\\n      author: 'Kyle Simpson',\\n      id: '23',\\n      level: 'Advanced',\\n      title: 'Advanced JavaScript'\\n    },\\n    {\\n      author: 'Mark Zamoyta',\\n      id: '24',\\n      level: 'Advanced',\\n      title: 'Rapid JavaScript Training'\\n    },\\n    {\\n      author: 'Dan Wahlin',\\n      id: '25',\\n      level: 'Advanced',\\n      title: 'Structuring JavaScript Code'\\n    },\\n    {\\n      author: 'Jim Cooper',\\n      id: '26',\\n      level: 'Advanced',\\n      title: 'JavaScript Objects and PropTypes'\\n    }\\n  ]\\n}\\n\")), mdx(\"h3\", {\n    \"id\": \"use-portals-for-overflow\"\n  }, \"Use portals for overflow\"), mdx(\"p\", null, \"If there are any UI elements that need to appear in the same visual space as the carousel container, they will need to be rendered outside the \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"Carousel\"), \" DOM. This is because the Carousel container solution requires being styled \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"overflow: hidden\"), \". A \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"https://reactjs.org/docs/portals.html\"\n  }, \"React Portal\"), \" is a great solution. A common example could be an \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"ActionMenu\"), \" rendered from a \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"Card\"), \". Here is some example code:\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-typescript\"\n  }, \"import ActionMenu from '@pluralsight/ps-design-system-actionmenu'\\nimport { BelowRight } from '@pluralsight/ps-design-system-position'\\nimport Card from '@pluralsight/ps-design-system-card'\\nimport Carousel from '@pluralsight/ps-design-system-carousel'\\nimport { MoreIcon } from '@pluralsight/ps-design-system-icon'\\nimport React from 'react'\\n\\nfunction Example() {\\n  return (\\n    <Carousel size={Carousel.sizes.wide}>\\n      {MOCK_DATA.courses.map(course => (\\n        <Carousel.Item key={course.id}>\\n          <Toggle>\\n            {({ active, toggle }) => (\\n              <Card\\n                image={<Card.Image src={course.image} />}\\n                metadata1={[course.author, course.level]}\\n                title={<Card.Title>{course.title}</Card.Title>}\\n                actionBarVisible\\n                actionBar={[\\n                  <BelowRight\\n                    inNode={typeof document !== 'undefined' && document.body}\\n                    when={active}\\n                    show={\\n                      <ActionMenu onClick={toggle}>\\n                        <ActionMenu.Item>Useless item</ActionMenu.Item>\\n                        <ActionMenu.Item>Useless item</ActionMenu.Item>\\n                        <ActionMenu.Item>Useless item</ActionMenu.Item>\\n                        <ActionMenu.Item>Useless item</ActionMenu.Item>\\n                        <ActionMenu.Item>Useless item</ActionMenu.Item>\\n                        <ActionMenu.Item>Useless item</ActionMenu.Item>\\n                        <ActionMenu.Item>Useless item</ActionMenu.Item>\\n                        <ActionMenu.Item>Useless item</ActionMenu.Item>\\n                      </ActionMenu>\\n                    }\\n                    key=\\\"a\\\"\\n                  >\\n                    <Card.Action\\n                      title=\\\"See more\\\"\\n                      icon={<MoreIcon />}\\n                      onClick={toggle}\\n                    />\\n                  </BelowRight>\\n                ]}\\n              />\\n            )}\\n          </Toggle>\\n        </Carousel.Item>\\n      ))}\\n    </Carousel>\\n  )\\n}\\n\\nexport default Example\\n\\nfunction Toggle(props) {\\n  const [active, setActive] = React.useState(\\n    typeof props.active === 'undefined' ? !!props.startActive : !!props.active\\n  )\\n\\n  function toggle() {\\n    setActive(!active)\\n  }\\n\\n  return props.children({ active, toggle })\\n}\\n\\nconst MOCK_DATA = {\\n  courses: [\\n    {\\n      author: 'Jim Cooper',\\n      id: '1',\\n      level: 'Intermediate',\\n      title: 'Vue.js Fundamentals'\\n    },\\n    {\\n      author: 'Mark Heath',\\n      id: '2',\\n      level: 'Intermediate',\\n      title: 'Azure Functions Fundamentals'\\n    },\\n    {\\n      author: 'Kyle Simpson',\\n      id: '3',\\n      level: 'Advanced',\\n      title: 'Advanced JavaScript'\\n    },\\n    {\\n      author: 'Mark Zamoyta',\\n      id: '4',\\n      level: 'Advanced',\\n      title: 'Rapid JavaScript Training'\\n    },\\n    {\\n      author: 'Dan Wahlin',\\n      id: '5',\\n      level: 'Advanced',\\n      title: 'Structuring JavaScript Code'\\n    },\\n    {\\n      author: 'Jim Cooper',\\n      id: '6',\\n      level: 'Advanced',\\n      title: 'JavaScript Objects and PropTypes'\\n    },\\n    {\\n      author: 'Jim Cooper',\\n      id: '11',\\n      level: 'Intermediate',\\n      title: 'Vue.js Fundamentals'\\n    },\\n    {\\n      author: 'Mark Heath',\\n      id: '12',\\n      level: 'Intermediate',\\n      title: 'Azure Functions Fundamentals'\\n    },\\n    {\\n      author: 'Kyle Simpson',\\n      id: '13',\\n      level: 'Advanced',\\n      title: 'Advanced JavaScript'\\n    },\\n    {\\n      author: 'Mark Zamoyta',\\n      id: '14',\\n      level: 'Advanced',\\n      title: 'Rapid JavaScript Training'\\n    },\\n    {\\n      author: 'Dan Wahlin',\\n      id: '15',\\n      level: 'Advanced',\\n      title: 'Structuring JavaScript Code'\\n    },\\n    {\\n      author: 'Jim Cooper',\\n      id: '16',\\n      level: 'Advanced',\\n      title: 'JavaScript Objects and PropTypes'\\n    },\\n    {\\n      author: 'Jim Cooper',\\n      id: '21',\\n      level: 'Intermediate',\\n      title: 'Vue.js Fundamentals'\\n    },\\n    {\\n      author: 'Mark Heath',\\n      id: '22',\\n      level: 'Intermediate',\\n      title: 'Azure Functions Fundamentals'\\n    },\\n    {\\n      author: 'Kyle Simpson',\\n      id: '23',\\n      level: 'Advanced',\\n      title: 'Advanced JavaScript'\\n    },\\n    {\\n      author: 'Mark Zamoyta',\\n      id: '24',\\n      level: 'Advanced',\\n      title: 'Rapid JavaScript Training'\\n    },\\n    {\\n      author: 'Dan Wahlin',\\n      id: '25',\\n      level: 'Advanced',\\n      title: 'Structuring JavaScript Code'\\n    },\\n    {\\n      author: 'Jim Cooper',\\n      id: '26',\\n      level: 'Advanced',\\n      title: 'JavaScript Objects and PropTypes'\\n    }\\n  ]\\n}\\n\")), mdx(\"h2\", {\n    \"id\": \"guidelines\"\n  }, \"Guidelines\"), mdx(\"p\", null, \"The height of the carousel adapts to the height of the content it contains, but the width of its children will be equalized, so make sure to use related content for children that are intended to be used at the same height and width.\"), mdx(Guideline, {\n    columnCount: 1,\n    do: mdx(Carousel, {\n      size: Carousel.sizes.wide,\n      mdxType: \"Carousel\"\n    }, mdx(Carousel.Item, null, mdx(MockItem, {\n      mdxType: \"MockItem\"\n    })), mdx(Carousel.Item, null, mdx(MockItem, {\n      mdxType: \"MockItem\"\n    })), mdx(Carousel.Item, null, mdx(MockItem, {\n      mdxType: \"MockItem\"\n    })), mdx(Carousel.Item, null, mdx(MockItem, {\n      mdxType: \"MockItem\"\n    })), mdx(Carousel.Item, null, mdx(MockItem, {\n      mdxType: \"MockItem\"\n    }))),\n    dont: mdx(Carousel, {\n      size: Carousel.sizes.wide,\n      mdxType: \"Carousel\"\n    }, mdx(Carousel.Item, null, mdx(Note, {\n      avatar: mdx(Avatar, {\n        name: \"Bob Ross\",\n        src: \"//picsum.photos/128\",\n        mdxType: \"Avatar\"\n      }),\n      message: mdx(\"p\", null, \"Wow, this is a card. The text goes on for a long time. It makes a vertical alignment problem with hetereogeneous content in a carousel.\"),\n      mdxType: \"Note\"\n    })), mdx(Carousel.Item, null, mdx(Avatar, {\n      name: \"Bob Ross\",\n      src: \"//picsum.photos/128\",\n      mdxType: \"Avatar\"\n    })), mdx(Carousel.Item, null, mdx(Card, {\n      bonusBar: mdx(Avatar, {\n        size: Avatar.sizes.xSmall,\n        name: \"Jake Trent\",\n        mdxType: \"Avatar\"\n      }),\n      title: mdx(Card.Title, null, \"Getting Started with Reactive Programming Using RxJS\"),\n      progress: 20,\n      image: mdx(Card.Image, {\n        src: \"https://picsum.photos/seed/picsum/540/360\"\n      }),\n      metadata1: ['Scott Allen', 'Intermediate'],\n      metadata2: ['23m watched'],\n      size: Card.sizes.small,\n      mdxType: \"Card\"\n    }))),\n    mdxType: \"Guideline\"\n  }), mdx(\"h2\", {\n    \"id\": \"accessibility\"\n  }, \"Accessibility\"), mdx(\"p\", null, mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"WCAG 2.1 AA Compliance\")), mdx(CheckCircleFillIcon, {\n    color: \"green\",\n    size: \"xSmall\",\n    mdxType: \"CheckCircleFillIcon\"\n  }), \" 100% axe-core tests\", mdx(\"br\", null), mdx(WarningFilledIcon, {\n    color: \"red\",\n    size: \"xSmall\",\n    mdxType: \"WarningFilledIcon\"\n  }), \" Manual audit\", mdx(\"p\", null, \"WAI-ARIA Patterns: \", mdx(A, {\n    href: \"https://www.w3.org/TR/wai-aria-practices-1.2/#carousel\",\n    target: \"_blank\",\n    rel: \"noreferrer\",\n    mdxType: \"A\"\n  }, \"Carousel\")), mdx(\"h2\", {\n    \"id\": \"props\"\n  }, \"Props\"), mdx(\"h3\", {\n    \"id\": \"carousel-1\"\n  }, \"Carousel\"), mdx(TypesTable, {\n    mdxType: \"TypesTable\"\n  }, mdx(TypesProp, {\n    name: \"children\",\n    required: true,\n    type: \"Carousel.Item\",\n    desc: \"items to place in carousel\",\n    mdxType: \"TypesProp\"\n  }), mdx(TypesProp, {\n    name: \"size\",\n    type: mdx(TypesEnum, {\n      enum: Carousel.sizes,\n      mdxType: \"TypesEnum\"\n    }),\n    desc: \"size of carousel items\",\n    default: \"medium\",\n    mdxType: \"TypesProp\"\n  })), mdx(\"h3\", {\n    \"id\": \"carouselcontrols\"\n  }, \"Carousel.Controls\"), mdx(TypesTable, {\n    mdxType: \"TypesTable\"\n  }, mdx(TypesProp, {\n    name: \"children\",\n    required: true,\n    type: \"React.ReactNode\",\n    desc: \"controls to advance carousel frames\",\n    mdxType: \"TypesProp\"\n  })), mdx(\"h3\", {\n    \"id\": \"carouselcontrol\"\n  }, \"Carousel.Control\"), mdx(TypesTable, {\n    mdxType: \"TypesTable\"\n  }, mdx(TypesProp, {\n    name: \"direction\",\n    required: true,\n    type: mdx(TypesEnum, {\n      enum: Carousel.Control.directions,\n      mdxType: \"TypesEnum\"\n    }),\n    desc: \"(from Carousel.Control.directions)\",\n    mdxType: \"TypesProp\"\n  })), mdx(\"h3\", {\n    \"id\": \"carouselitem\"\n  }, \"Carousel.Item\"), mdx(TypesTable, {\n    mdxType: \"TypesTable\"\n  }, mdx(TypesProp, {\n    name: \"children\",\n    required: true,\n    type: \"React.ReactNode | () => React.ReactNode\",\n    desc: \"render prop used to access item and page metadata\",\n    mdxType: \"TypesProp\"\n  })));\n}\n;\nMDXContent.isMDXComponent = true;","frontmatter":{"name":"Carousel","route":"/components/carousel"},"headings":[{"value":"Carousel","depth":1},{"value":"Examples","depth":2},{"value":"Size","depth":3},{"value":"Use portals for overflow","depth":3},{"value":"Guidelines","depth":2},{"value":"Accessibility","depth":2},{"value":"Props","depth":2},{"value":"Carousel","depth":3},{"value":"Carousel.Controls","depth":3},{"value":"Carousel.Control","depth":3},{"value":"Carousel.Item","depth":3}]}},"pageContext":{"slug":"/components/carousel/","version":"CHANGELOG"}},
    "staticQueryHashes": []}