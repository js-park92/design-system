{
    "componentChunkName": "component---src-templates-page-tsx",
    "path": "/components/tab",
    "result": {"data":{"mdx":{"body":"var _excluded = [\"components\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar _frontmatter = {\n  \"name\": \"Tab\",\n  \"route\": \"/components/tab\"\n};\n\nvar makeShortcode = function makeShortcode(name) {\n  return function MDXDefaultShortcode(props) {\n    console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n    return mdx(\"div\", props);\n  };\n};\n\nvar Intro = makeShortcode(\"Intro\");\nvar Usage = makeShortcode(\"Usage\");\nvar TableOfContents = makeShortcode(\"TableOfContents\");\nvar CheckCircleFillIcon = makeShortcode(\"CheckCircleFillIcon\");\nvar WarningFilledIcon = makeShortcode(\"WarningFilledIcon\");\nvar A = makeShortcode(\"A\");\nvar TypesTable = makeShortcode(\"TypesTable\");\nvar TypesProp = makeShortcode(\"TypesProp\");\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"h1\", {\n    \"id\": \"horizontal-tab\"\n  }, \"Horizontal tab\"), mdx(Intro, {\n    mdxType: \"Intro\"\n  }, \"Use tabs to organize content into multiple sections and allow users to navigate between them.\"), mdx(Usage, {\n    figmaUrl: \"https://www.figma.com/file/YsTklBecdddy9RZ3HXddIseD/?node-id=10235%3A29982\",\n    install: \"npm install @pluralsight/ps-design-system-tab\",\n    import: \"import Tab from '@pluralsight/ps-design-system-tab'\",\n    packageName: \"tab\",\n    version: props.version,\n    mdxType: \"Usage\"\n  }), mdx(TableOfContents, _extends({}, props, {\n    mdxType: \"TableOfContents\"\n  })), mdx(\"h2\", {\n    \"id\": \"example\"\n  }, \"Example\"), mdx(\"p\", null, \"Panels are wrappers that provide an accessibility link between the \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"Tab.ListItem\"), \" and your content. Ensure your ids match to make the link.\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-typescript\"\n  }, \"import Tab from '@pluralsight/ps-design-system-tab'\\nimport { P } from '@pluralsight/ps-design-system-text'\\nimport React from 'react'\\n\\nfunction Example() {\\n  const [activeIndex, setActiveIndex] = React.useState(2)\\n  const menus = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13].map(i => ({\\n    id: `example${i}`,\\n    label: `Menu ${i}`,\\n    content: `Menu stuff ${i}`\\n  }))\\n  return (\\n    <>\\n      <Tab.List>\\n        {menus.map((menu, i) => (\\n          <Tab.ListItem\\n            id={menu.id}\\n            key={menu.id}\\n            onClick={() => setActiveIndex(i)}\\n            {...(i === activeIndex ? { active: true } : null)}\\n          >\\n            {menu.label}\\n          </Tab.ListItem>\\n        ))}\\n      </Tab.List>\\n      {menus.map((menu, i) =>\\n        i === activeIndex ? (\\n          <Tab.Panel labelledBy={menu.id} key={menu.id}>\\n            <P>{menu.content}</P>\\n          </Tab.Panel>\\n        ) : null\\n      )}\\n    </>\\n  )\\n}\\n\\nexport default Example\\n\")), mdx(\"h2\", {\n    \"id\": \"accessibility\"\n  }, \"Accessibility\"), mdx(\"p\", null, mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"WCAG 2.1 AA Compliance\")), mdx(CheckCircleFillIcon, {\n    color: \"green\",\n    size: \"xSmall\",\n    mdxType: \"CheckCircleFillIcon\"\n  }), \" 100% axe-core tests\", mdx(\"br\", null), mdx(WarningFilledIcon, {\n    color: \"red\",\n    size: \"xSmall\",\n    mdxType: \"WarningFilledIcon\"\n  }), \" Manual audit\", mdx(\"p\", null, \"WAI-ARIA Patterns: \", mdx(A, {\n    href: \"https://www.w3.org/TR/wai-aria-practices-1.2/#tabpanel\",\n    target: \"_blank\",\n    rel: \"noreferrer\",\n    mdxType: \"A\"\n  }, \"Tabs\")), mdx(\"h2\", {\n    \"id\": \"props\"\n  }, \"Props\"), mdx(\"h3\", {\n    \"id\": \"tab\"\n  }, \"Tab\"), mdx(TypesTable, {\n    mdxType: \"TypesTable\"\n  }, mdx(TypesProp, {\n    name: \"active\",\n    type: \"boolean\",\n    desc: \"styled active (automatically set)\",\n    mdxType: \"TypesProp\"\n  }), mdx(TypesProp, {\n    name: \"href\",\n    type: \"string\",\n    desc: \"url of resource (renders as anchor)\",\n    mdxType: \"TypesProp\"\n  }), mdx(TypesProp, {\n    name: \"id\",\n    required: true,\n    type: \"string|number\",\n    desc: \"id tying list item to panel\",\n    mdxType: \"TypesProp\"\n  }), mdx(TypesProp, {\n    name: \"onClick\",\n    required: true,\n    type: \"Event => void\",\n    desc: \"callback when list item clicked\",\n    mdxType: \"TypesProp\"\n  })), mdx(\"h3\", {\n    \"id\": \"tabpanel\"\n  }, \"Tab.Panel\"), mdx(TypesTable, {\n    mdxType: \"TypesTable\"\n  }, mdx(TypesProp, {\n    name: \"labelledBy\",\n    required: true,\n    type: \"string|number\",\n    desc: \"id tying panel to list item\",\n    mdxType: \"TypesProp\"\n  })));\n}\n;\nMDXContent.isMDXComponent = true;","frontmatter":{"name":"Tab","route":"/components/tab"},"headings":[{"value":"Horizontal tab","depth":1},{"value":"Example","depth":2},{"value":"Accessibility","depth":2},{"value":"Props","depth":2},{"value":"Tab","depth":3},{"value":"Tab.Panel","depth":3}]}},"pageContext":{"slug":"/components/tab/","version":"CHANGELOG"}},
    "staticQueryHashes": []}