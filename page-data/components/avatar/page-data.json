{
    "componentChunkName": "component---src-templates-page-tsx",
    "path": "/components/avatar",
    "result": {"data":{"mdx":{"body":"var _excluded = [\"components\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar _frontmatter = {\n  \"name\": \"Avatar\",\n  \"route\": \"/components/avatar\"\n};\n\nvar makeShortcode = function makeShortcode(name) {\n  return function MDXDefaultShortcode(props) {\n    console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n    return mdx(\"div\", props);\n  };\n};\n\nvar TableOfContents = makeShortcode(\"TableOfContents\");\nvar Intro = makeShortcode(\"Intro\");\nvar Usage = makeShortcode(\"Usage\");\nvar CheckCircleFillIcon = makeShortcode(\"CheckCircleFillIcon\");\nvar WarningFilledIcon = makeShortcode(\"WarningFilledIcon\");\nvar TypesTable = makeShortcode(\"TypesTable\");\nvar TypesProp = makeShortcode(\"TypesProp\");\nvar TypesEnum = makeShortcode(\"TypesEnum\");\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"h1\", {\n    \"id\": \"avatar\"\n  }, \"Avatar\"), mdx(TableOfContents, _extends({}, props, {\n    mdxType: \"TableOfContents\"\n  })), mdx(Intro, {\n    mdxType: \"Intro\"\n  }, \"An avatar is a thumbnail representation of a user or an organization.\"), mdx(Usage, {\n    figmaUrl: \"https://www.figma.com/file/YsTklBecdddy9RZ3HXddIseD/?node-id=10235%3A29929\",\n    install: \"npm install @pluralsight/ps-design-system-avatar\",\n    import: \"import Avatar from '@pluralsight/ps-design-system-avatar'\",\n    packageName: \"avatar\",\n    version: props.version,\n    mdxType: \"Usage\"\n  }), mdx(\"h2\", {\n    \"id\": \"examples\"\n  }, \"Examples\"), mdx(\"h3\", {\n    \"id\": \"sizes\"\n  }, \"Sizes\"), mdx(\"p\", null, \"Avatars are available in five sizes specified with the \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"size\"), \" prop.\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-typescript\"\n  }, \"import Avatar from '@pluralsight/ps-design-system-avatar'\\nimport React from 'react'\\n\\nfunction Example() {\\n  return (\\n    <div className=\\\"example-grid--col-5\\\">\\n      <Avatar\\n        size=\\\"xLarge\\\"\\n        name=\\\"Assis Silva\\\"\\n        src=\\\"https://secure.gravatar.com/avatar/0f792a763ebf08411c7f566079e4adc7?s=400\\\"\\n      />\\n      <Avatar\\n        size=\\\"large\\\"\\n        name=\\\"Assis Silva\\\"\\n        src=\\\"https://secure.gravatar.com/avatar/0f792a763ebf08411c7f566079e4adc7?s=400\\\"\\n      />\\n      <Avatar\\n        size=\\\"medium\\\"\\n        name=\\\"Assis Silva\\\"\\n        src=\\\"https://secure.gravatar.com/avatar/0f792a763ebf08411c7f566079e4adc7?s=400\\\"\\n      />\\n      <Avatar\\n        size=\\\"small\\\"\\n        name=\\\"Assis Silva\\\"\\n        src=\\\"https://secure.gravatar.com/avatar/0f792a763ebf08411c7f566079e4adc7?s=400\\\"\\n      />\\n      <Avatar\\n        size=\\\"xSmall\\\"\\n        name=\\\"Assis Silva\\\"\\n        src=\\\"https://secure.gravatar.com/avatar/0f792a763ebf08411c7f566079e4adc7?s=400\\\"\\n      />\\n    </div>\\n  )\\n}\\n\\nexport default Example\\n\")), mdx(\"h3\", {\n    \"id\": \"fallback-states\"\n  }, \"Fallback states\"), mdx(\"p\", null, \"An avatar with an image is preferred. In cases where the image is unavailable or loading, the first initial of the person pictured will be displayed on a background of nine possible colors. Always provide the \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"name\"), \" prop as a fallback.\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-typescript\"\n  }, \"import Avatar from '@pluralsight/ps-design-system-avatar'\\nimport React from 'react'\\n\\nfunction Example() {\\n  return (\\n    <div className=\\\"example-grid--col-5\\\">\\n      <Avatar size=\\\"medium\\\" name=\\\"Vaughn Christensen\\\" />\\n      <Avatar size=\\\"medium\\\" name=\\\"Brie Cowan\\\" />\\n      <Avatar size=\\\"medium\\\" name=\\\"Darius Klein\\\" />\\n      <Avatar size=\\\"medium\\\" name=\\\"Ronnie Lindsey\\\" />\\n      <Avatar size=\\\"medium\\\" name=\\\"Michael Holden\\\" />\\n      <Avatar size=\\\"medium\\\" name=\\\"Teresa Brewer\\\" />\\n      <Avatar size=\\\"medium\\\" name=\\\"Jan Berg\\\" />\\n      <Avatar size=\\\"medium\\\" name=\\\"Grant Knight\\\" />\\n      <Avatar size=\\\"medium\\\" name=\\\"Penelope Taylor\\\" />\\n      <Avatar size=\\\"medium\\\" name=\\\"\\\" />\\n    </div>\\n  )\\n}\\n\\nexport default Example\\n\")), mdx(\"h2\", {\n    \"id\": \"accessibility\"\n  }, \"Accessibility\"), mdx(\"p\", null, mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"WCAG 2.1 AA Compliance\")), mdx(CheckCircleFillIcon, {\n    color: \"green\",\n    size: \"xSmall\",\n    mdxType: \"CheckCircleFillIcon\"\n  }), \" 100% axe-core tests\", mdx(\"br\", null), mdx(WarningFilledIcon, {\n    color: \"red\",\n    size: \"xSmall\",\n    mdxType: \"WarningFilledIcon\"\n  }), \" Manual audit\", mdx(\"h2\", {\n    \"id\": \"props\"\n  }, \"Props\"), mdx(TypesTable, {\n    mdxType: \"TypesTable\"\n  }, mdx(TypesProp, {\n    name: \"name\",\n    type: \"string\",\n    desc: \"used to generate intials as a fallback image\",\n    mdxType: \"TypesProp\"\n  }), mdx(TypesProp, {\n    name: \"size\",\n    type: mdx(TypesEnum, {\n      enum: Avatar.sizes,\n      mdxType: \"TypesEnum\"\n    }),\n    desc: \"avatar size (from Avatar.sizes)\",\n    default: \"medium\",\n    mdxType: \"TypesProp\"\n  }), mdx(TypesProp, {\n    name: \"src\",\n    type: \"string\",\n    desc: \"URI or path to avatar image\",\n    mdxType: \"TypesProp\"\n  })));\n}\n;\nMDXContent.isMDXComponent = true;","frontmatter":{"name":"Avatar","route":"/components/avatar"},"headings":[{"value":"Avatar","depth":1},{"value":"Examples","depth":2},{"value":"Sizes","depth":3},{"value":"Fallback states","depth":3},{"value":"Accessibility","depth":2},{"value":"Props","depth":2}]}},"pageContext":{"slug":"/components/avatar/","version":"13.0.4"}},
    "staticQueryHashes": []}