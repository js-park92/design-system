{
    "componentChunkName": "component---src-templates-page-tsx",
    "path": "/components/nav",
    "result": {"data":{"mdx":{"body":"var _excluded = [\"components\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar _frontmatter = {\n  \"name\": \"Nav\",\n  \"route\": \"/components/nav\"\n};\n\nvar makeShortcode = function makeShortcode(name) {\n  return function MDXDefaultShortcode(props) {\n    console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n    return mdx(\"div\", props);\n  };\n};\n\nvar Intro = makeShortcode(\"Intro\");\nvar TableOfContents = makeShortcode(\"TableOfContents\");\nvar Usage = makeShortcode(\"Usage\");\nvar TypesTable = makeShortcode(\"TypesTable\");\nvar TypesProp = makeShortcode(\"TypesProp\");\nvar TypesEnum = makeShortcode(\"TypesEnum\");\nvar CheckCircleFillIcon = makeShortcode(\"CheckCircleFillIcon\");\nvar WarningFilledIcon = makeShortcode(\"WarningFilledIcon\");\nvar A = makeShortcode(\"A\");\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"h1\", {\n    \"id\": \"global-navigation\"\n  }, \"Global navigation\"), mdx(Intro, {\n    mdxType: \"Intro\"\n  }, \"Nav components are the building blocks for creating the global navigation bar for your experience.\"), mdx(TableOfContents, _extends({}, props, {\n    mdxType: \"TableOfContents\"\n  })), mdx(\"h2\", {\n    \"id\": \"full-nav-example\"\n  }, \"Full nav example\"), mdx(\"p\", null, \"This is an example of how the navigation components can be used together to create a global navigation system for your product experience that is consistent with other global navigation bars across Pluralsight\", \"\\u2019\", \"s apps.\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-typescript\"\n  }, \"import { AccountIcon, BrowseIcon NotificationsIcon } from '@pluralsight/ps-design-system-icon'\\nimport { layout } from '@pluralsight/ps-design-system-core'\\nimport NavBar from '@pluralsight/ps-design-system-navbar'\\nimport NavBrand from '@pluralsight/ps-design-system-navbrand'\\nimport NavItem from '@pluralsight/ps-design-system-navitem'\\nimport NavUser from '@pluralsight/ps-design-system-navuser'\\nimport NavCookieBanner from '@pluralsight/ps-design-system-navcookiebanner'\\nimport React from 'react'\\n\\nfunction Example() {\\n  return <NavBar\\n    brand={<NavBrand logo={<MyLogo />} wordmark=\\\"TITLE\\\" />}\\n    items={\\n      <>\\n        <div\\n          style={{\\n            marginRight: layout.spacingXXSmall,\\n            display: 'inline-block'\\n          }}\\n        >\\n          <NavItem icon={<HomeIcon />}>Home</NavItem>\\n        </div>\\n        <div\\n          style={{\\n            display: 'inline-block'\\n          }}\\n        >\\n          <NavItem icon={<BrowseIcon />} selected>\\n            Browse\\n          </NavItem>\\n        </div>\\n      </>\\n    }\\n    onMobileMenuClick={() => alert('mobile click')}\\n    user={\\n      <NavUser\\n        name=\\\"Jake\\\"\\n        planName=\\\"Accenture\\\"\\n        onClick={() => alert('user click')}\\n      />\\n    }\\n    utility={\\n      <React.Fragment>\\n        <div\\n          style={{\\n            marginRight: layout.spacingXXSmall,\\n            display: 'inline-block'\\n          }}\\n        >\\n          <NavItem icon={<NotificationsIcon />} />\\n        </div>\\n        <div\\n          style={{\\n            display: 'inline-block'\\n          }}\\n        >\\n          <NavItem icon={<AccountIcon />} />\\n        </div>\\n      </React.Fragment>\\n    }\\n  />\\n}\\n\\nexport default Example\\n\\nfunction MyLogo() {\\n  return (\\n    <svg width=\\\"24\\\" height=\\\"24\\\" viewBox=\\\"0 0 24 24\\\" fill=\\\"none\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\">\\n      <rect width=\\\"24\\\" height=\\\"24\\\" fill=\\\"url(#logo)\\\" />\\n      <defs>\\n        <linearGradient id=\\\"logo\\\" x1=\\\"0\\\" y1=\\\"0\\\" x2=\\\"24\\\" y2=\\\"24\\\" gradientUnits=\\\"userSpaceOnUse\\\">\\n          <stop stopColor=\\\"#8A99A8\\\" />\\n          <stop offset=\\\"1\\\" stopColor=\\\"#576675\\\" />\\n        </linearGradient>\\n      </defs>\\n    </svg>\\n  )\\n}\\n\")), mdx(\"p\", null, mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"Global navigation guidelines\")), mdx(\"p\", null, \"To ensure consistency when navigating across product experiences with different global navigation:\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Always keep the navigation bar height 56px.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"The navigation bar should be fluid and sticky to the left/top/right edges of the browser viewport. This will happen automatically if you use the app frame component.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"The brand, utility, and user elements should always be in the same place to ensure consistency across products. Brand on the left, utility and user on the right.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"The items visible to a user in the product switcher should be the same across all products.\")), mdx(\"h2\", {\n    \"id\": \"nav-components\"\n  }, \"Nav components\"), mdx(\"h3\", {\n    \"id\": \"navbar\"\n  }, \"NavBar\"), mdx(\"p\", null, \"The nav bar component is the container of the global navigation. It\\u2019s 56px tall and should be fluid and sticky to the left/top/right of the browser viewport.\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-typescript\"\n  }, \"import { colorsPink, layout } from '@pluralsight/ps-design-system-core'\\nimport NavBar from '@pluralsight/ps-design-system-navbar'\\nimport React from 'react'\\n\\nfunction Filler(props) {\\n  return (\\n    <div className=\\\"filler\\\">\\n      {props.children}\\n      <style jsx>{`\\n        .filler {\\n          display: flex;\\n          align-items: center;\\n          justify-content: center;\\n          color: ${colorsPink[6]};\\n          height: 100%;\\n          border: 2px dashed ${colorsPink[6]};\\n          padding: 0 ${layout.spacingMedium};\\n        }\\n      `}</style>\\n    </div>\\n  )\\n}\\n\\nfunction Example() {\\n  return (\\n    <NavBar\\n      brand={<Filler>Brand</Filler>}\\n      items={<Filler>Items</Filler>}\\n      user={<Filler>User</Filler>}\\n      utility={<Filler>Utility</Filler>}\\n    />\\n  )\\n}\\n\\nexport default Example\\n\")), mdx(Usage, {\n    figmaUrl: \"https://www.figma.com/file/YsTklBecdddy9RZ3HXddIseD/?node-id=10262%3A377\",\n    install: \"npm install @pluralsight/ps-design-system-navbar\",\n    import: \"import NavBar from '@pluralsight/ps-design-system-navbar'\",\n    packageName: \"navbar\",\n    version: props.version,\n    mdxType: \"Usage\"\n  }), mdx(TypesTable, {\n    mdxType: \"TypesTable\"\n  }, mdx(TypesProp, {\n    name: \"brand\",\n    type: \"React.ReactNode\",\n    desc: \"global product branding\",\n    mdxType: \"TypesProp\"\n  }), mdx(TypesProp, {\n    name: \"items\",\n    type: \"React.ReactNode\",\n    desc: \"top-level nav affordances\",\n    mdxType: \"TypesProp\"\n  }), mdx(TypesProp, {\n    name: \"onMobileMenuClick\",\n    type: \"Event => ()\",\n    desc: \"displays hamburger menu; called on click\",\n    mdxType: \"TypesProp\"\n  }), mdx(TypesProp, {\n    name: \"utility\",\n    type: \"React.ReactNode\",\n    desc: \"top-right affordances next to user\",\n    mdxType: \"TypesProp\"\n  }), mdx(TypesProp, {\n    name: \"user\",\n    type: \"React.ReactNode\",\n    desc: \"user profile affordance\",\n    mdxType: \"TypesProp\"\n  })), mdx(\"h3\", {\n    \"id\": \"navitem\"\n  }, \"NavItem\"), mdx(\"p\", null, \"The nav item component is for creating links to pages or as action triggers. A horizontal variant can be used with or without an icon. The vertical variant always requires an icon. The icon-only variant can also be used for very recognizable icons/actions when a label is unecessary.\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-typescript\",\n    \"metastring\": \"themeName=dark\",\n    \"themeName\": \"dark\"\n  }, \"import { colorsBackgroundDark, layout } from '@pluralsight/ps-design-system-core'\\nimport { HomeIcon } from '@pluralsight/ps-design-system-icon'\\nimport NavItem from '@pluralsight/ps-design-system-navitem'\\nimport React from 'react'\\n\\nfunction Example() {\\n  return (\\n    <div className=\\\"example-grid\\\">\\n      <NavItem icon={<HomeIcon />} menu={<div>placeholder</div>}>\\n        Label\\n      </NavItem>\\n      <NavItem icon={<HomeIcon />}>Label</NavItem>\\n      <NavItem menu={<div>placeholder</div>}>Label</NavItem>\\n      <NavItem renderContainer={props => <a href=\\\"#\\\" {...props} />}>\\n        Label\\n      </NavItem>\\n\\n      <NavItem icon={<HomeIcon />} alignment={NavItem.alignments.vertical}>\\n        Label\\n      </NavItem>\\n      <NavItem\\n        icon={<HomeIcon />}\\n        alignment={NavItem.alignments.vertical}\\n        menu={<div>placeholder</div>}\\n      >\\n        Label\\n      </NavItem>\\n      <NavItem icon={<HomeIcon />} />\\n    </div>\\n  )\\n}\\n\\nexport default Example\\n\")), mdx(\"p\", null, \"To override and brand the \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"NavItem\"), \", use the \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"UNSAFE_stylesFor\"), \" prop, like so:\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-typescript\",\n    \"metastring\": \"themeName=dark\",\n    \"themeName\": \"dark\"\n  }, \"import { colorsGradient } from '@pluralsight/ps-design-system-core'\\nimport { HomeIcon } from '@pluralsight/ps-design-system-icon'\\nimport NavItem from '@pluralsight/ps-design-system-navitem'\\nimport React from 'react'\\n\\nfunction Example() {\\n  return (\\n    <NavItem\\n      icon={<HomeIcon />}\\n      selected\\n      UNSAFE_stylesFor={{\\n        'navitem__bar--selected': {\\n          background: colorsGradient.flowBackground\\n        }\\n      }}\\n    >\\n      Flow Selected\\n    </NavItem>\\n  )\\n}\\n\\nexport default Example\\n\")), mdx(\"p\", null, mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"NavItem guidelines\")), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Be prudent with the nav items and the the number you use. Try to keep it to about about 2-5. Organize the items well, use short yet descriptive labels, and use grouping with dropdown menus if you need more items than will fit.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Use icon only nav items when the icon clearly represents what the nav item is or does. Use tooltips with icon only nav items.\")), mdx(Usage, {\n    figmaUrl: \"https://www.figma.com/file/YsTklBecdddy9RZ3HXddIseD/?node-id=10262%3A377\",\n    install: \"npm install @pluralsight/ps-design-system-navitem\",\n    import: \"import NavItem from '@pluralsight/ps-design-system-navitem'\",\n    packageName: \"navitem\",\n    mdxType: \"Usage\"\n  }), mdx(TypesTable, {\n    mdxType: \"TypesTable\"\n  }, mdx(TypesProp, {\n    name: \"alignment\",\n    type: mdx(TypesEnum, {\n      enum: NavItem.alignments,\n      mdxType: \"TypesEnum\"\n    }),\n    desc: \"orientation of item elements\",\n    default: \"horizontal\",\n    mdxType: \"TypesProp\"\n  }), mdx(TypesProp, {\n    name: \"children\",\n    type: \"React.ReactNode\",\n    desc: \"label\",\n    mdxType: \"TypesProp\"\n  }), mdx(TypesProp, {\n    name: \"renderContainer\",\n    type: \"(props) => React.ReactNode\",\n    desc: \"render custom link element\",\n    mdxType: \"TypesProp\"\n  }), mdx(TypesProp, {\n    name: \"icon\",\n    type: \"React.ReactNode\",\n    desc: \"icon displayed\",\n    mdxType: \"TypesProp\"\n  }), mdx(TypesProp, {\n    name: \"menu\",\n    type: \"boolean\",\n    desc: \"toggles render of down caret\",\n    default: \"false\",\n    mdxType: \"TypesProp\"\n  }), mdx(TypesProp, {\n    name: \"selected\",\n    type: \"boolean\",\n    desc: \"toggles active state\",\n    default: \"false\",\n    mdxType: \"TypesProp\"\n  })), mdx(\"h3\", {\n    \"id\": \"navbrand\"\n  }, \"NavBrand\"), mdx(\"p\", null, \"The nav brand component creates a consistent use of branding for the icon and logo of an app. It is intended to always be placed at the left end of the nav bar.\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-typescript\",\n    \"metastring\": \"themeName=dark\",\n    \"themeName\": \"dark\"\n  }, \"import { colorsBackgroundDark, layout } from '@pluralsight/ps-design-system-core'\\nimport { HomeIcon } from '@pluralsight/ps-design-system-icon'\\nimport NavBrand from '@pluralsight/ps-design-system-navbrand'\\nimport React from 'react'\\n\\nfunction Example() {\\n  return (\\n    <div className=\\\"example-grid\\\">\\n      <NavBrand logo={<MyLogo />} wordmark=\\\"TITLE\\\" />\\n    </div>\\n  )\\n}\\n\\nexport default Example\\n\\nfunction MyLogo() {\\n  return (\\n    <svg\\n      width=\\\"24\\\"\\n      height=\\\"24\\\"\\n      viewBox=\\\"0 0 24 24\\\"\\n      fill=\\\"none\\\"\\n      xmlns=\\\"http://www.w3.org/2000/svg\\\"\\n    >\\n      <rect width=\\\"24\\\" height=\\\"24\\\" fill=\\\"url(#logo)\\\" />\\n      <defs>\\n        <linearGradient\\n          id=\\\"logo\\\"\\n          x1=\\\"0\\\"\\n          y1=\\\"0\\\"\\n          x2=\\\"24\\\"\\n          y2=\\\"24\\\"\\n          gradientUnits=\\\"userSpaceOnUse\\\"\\n        >\\n          <stop stopColor=\\\"#8A99A8\\\" />\\n          <stop offset=\\\"1\\\" stopColor=\\\"#576675\\\" />\\n        </linearGradient>\\n      </defs>\\n    </svg>\\n  )\\n}\\n\")), mdx(\"p\", null, \"The \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"wordmark\"), \" in the NavBrand can be any \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"ReactNode\"), \", including an svg that might be helpful for consistent branding.\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-typescript\",\n    \"metastring\": \"themeName=dark\",\n    \"themeName\": \"dark\"\n  }, \"import { colorsBackgroundDark, layout } from '@pluralsight/ps-design-system-core'\\nimport { HomeIcon } from '@pluralsight/ps-design-system-icon'\\nimport NavBrand from '@pluralsight/ps-design-system-navbrand'\\nimport React from 'react'\\n\\nfunction Example() {\\n  return (\\n    <div className=\\\"example-grid\\\">\\n      <NavBrand logo={<FlowLogo />} wordmark={<FlowWordmark />} />\\n    </div>\\n  )\\n}\\n\\nexport default Example\\n\\nconst FlowLogo: React.FC = () => {\\n  return (\\n    <svg aria-hidden viewBox=\\\"0 0 32 32\\\">\\n      <defs>\\n        <linearGradient\\n          id=\\\"flow-gradient\\\"\\n          x1=\\\"46.248\\\"\\n          y1=\\\"48.2732\\\"\\n          x2=\\\"-33.2531\\\"\\n          y2=\\\"-36.1648\\\"\\n          gradientUnits=\\\"userSpaceOnUse\\\"\\n        >\\n          <stop offset=\\\"0.15\\\" stopColor=\\\"#27AAE1\\\" />\\n          <stop offset=\\\"0.2\\\" stopColor=\\\"#279FD9\\\" />\\n          <stop offset=\\\"0.51\\\" stopColor=\\\"#2968B2\\\" stopOpacity=\\\"0.99\\\" />\\n          <stop offset=\\\"0.74\\\" stopColor=\\\"#2B4699\\\" stopOpacity=\\\"0.99\\\" />\\n          <stop offset=\\\"0.86\\\" stopColor=\\\"#2B3990\\\" stopOpacity=\\\"0.99\\\" />\\n        </linearGradient>\\n      </defs>\\n      <path\\n        d=\\\"M32 4.62132V0H0V32H32V26.4449H19.9037V23.2955H32V20.2217H25.0533V17.0723H32V7.77073H19.9037V4.62132H32ZM16.5982 4.51729C16.9326 4.50504 17.263 4.59298 17.547 4.76984C17.831 4.94669 18.0557 5.20439 18.1923 5.50986C18.3288 5.81533 18.371 6.15463 18.3133 6.48421C18.2556 6.8138 18.1008 7.11864 17.8686 7.3596C17.6365 7.60057 17.3377 7.76666 17.0104 7.83658C16.6832 7.90649 16.3426 7.87703 16.0323 7.75198C15.7219 7.62693 15.456 7.41199 15.2687 7.13475C15.0814 6.85751 14.9812 6.53062 14.9809 6.19602C14.9765 5.97951 15.0149 5.76427 15.0939 5.56262C15.1729 5.36098 15.2909 5.1769 15.4411 5.02095C15.5913 4.86499 15.7709 4.74022 15.9695 4.6538C16.168 4.56737 16.3817 4.52098 16.5982 4.51729ZM7.68908 12.4192C7.70114 12.1022 7.80614 11.7958 7.99101 11.538C8.17589 11.2803 8.43248 11.0826 8.72885 10.9696C9.02522 10.8565 9.34829 10.8331 9.65786 10.9023C9.96742 10.9715 10.2498 11.1302 10.4699 11.3586C10.6899 11.587 10.838 11.8751 10.8956 12.1871C10.9531 12.499 10.9177 12.821 10.7937 13.1129C10.6697 13.4049 10.4626 13.6539 10.1981 13.829C9.93366 14.0042 9.62354 14.0977 9.30634 14.0979C8.86944 14.0892 8.45383 13.9076 8.15065 13.5929C7.84747 13.2782 7.68148 12.8561 7.68908 12.4192ZM16.5935 26.5489C16.2589 26.5621 15.9281 26.475 15.6435 26.2987C15.3588 26.1225 15.1334 25.8652 14.9961 25.5598C14.8589 25.2544 14.816 24.915 14.8731 24.5851C14.9302 24.2553 15.0847 23.95 15.3166 23.7086C15.5485 23.4671 15.8473 23.3005 16.1746 23.2302C16.502 23.1599 16.8428 23.189 17.1535 23.3139C17.4641 23.4388 17.7303 23.6537 17.9178 23.931C18.1054 24.2083 18.2057 24.5354 18.206 24.8702C18.2136 25.3055 18.0489 25.7262 17.7478 26.0406C17.4466 26.3551 17.0334 26.5378 16.5982 26.5489H16.5935ZM22.5187 20.2217H9.32053V17.0723H22.5234L22.5187 20.2217ZM26.7746 10.8492V13.9939H12.6402V10.8492H26.7746Z\\\"\\n        fill=\\\"url(#flow-gradient)\\\"\\n      />\\n    </svg>\\n  )\\n}\\n\\nconst FlowWordmark: React.FC = () => {\\n  return (\\n    <svg\\n      fill=\\\"none\\\"\\n      height=\\\"32\\\"\\n      viewBox=\\\"0 0 68 32\\\"\\n      width=\\\"68\\\"\\n      xmlns=\\\"http://www.w3.org/2000/svg\\\"\\n    >\\n      <path\\n        clipRule=\\\"evenodd\\\"\\n        d=\\\"m31.9376 16.0914v-.04c-.0051-.9708.1833-1.933.5541-2.8301.3709-.8971.9167-1.7112 1.6056-2.3946s1.5071-1.2225 2.4066-1.58566c.8996-.36316 1.8624-.54313 2.8323-.52937 4.1734 0 7.361 3.21873 7.361 7.30213v.0423c.0054.9711-.1827 1.9334-.5534 2.8308s-.9165 1.7118-1.6055 2.3954c-.6889.6837-1.5072 1.223-2.4069 1.5863s-1.8627.5434-2.8328.5296c-4.1734 0-7.361-3.2188-7.361-7.3068zm10.2012 0v-.04c0-1.6705-1.1008-3.1788-2.8402-3.1788-1.7393 0-2.8003 1.4872-2.8003 3.1365v.0423c0 1.6681 1.1009 3.1788 2.8379 3.1788s2.8026-1.4942 2.8026-3.1388zm-22.8179-7.07773h-11.3209v14.08273h4.5208v-4.6073h6.3095v-3.6628h-6.3165v-1.7903h6.8071zm5.9785 0h-4.5279v14.08273h10.8655v-4.0246h-6.3376zm25.3507.00088h-4.7321l4.4222 14.18135h3.9411l2.3778-7.0014 2.3754 7.0014h3.9411l4.4246-14.18135h-4.657l-1.913 6.75945-2.183-6.79939h-3.9011l-2.183 6.79939z\\\"\\n        fill=\\\"#fff\\\"\\n        fillRule=\\\"evenodd\\\"\\n      />\\n    </svg>\\n  )\\n}\\n\")), mdx(\"p\", null, mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"NavBrand guidelines\")), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Use the nav brand component to provide consistency between experiences.\")), mdx(Usage, {\n    figmaUrl: \"https://www.figma.com/file/YsTklBecdddy9RZ3HXddIseD/?node-id=10262%3A377\",\n    install: \"npm install @pluralsight/ps-design-system-navbrand\",\n    import: \"import NavBrand from '@pluralsight/ps-design-system-navbrand'\",\n    packageName: \"navbrand\",\n    mdxType: \"Usage\"\n  }), mdx(TypesTable, {\n    mdxType: \"TypesTable\"\n  }, mdx(TypesProp, {\n    name: \"href\",\n    type: \"string\",\n    desc: \"destination url; renders anchor\",\n    mdxType: \"TypesProp\"\n  }), mdx(TypesProp, {\n    name: \"logo\",\n    type: \"React.ReactNode\",\n    desc: \"brand logo\",\n    mdxType: \"TypesProp\"\n  }), mdx(TypesProp, {\n    name: \"onClick\",\n    type: \"Event => void\",\n    desc: \"click handler\",\n    mdxType: \"TypesProp\"\n  }), mdx(TypesProp, {\n    name: \"wordmark\",\n    type: \"React.ReactNode\",\n    desc: \"brand logo\",\n    mdxType: \"TypesProp\"\n  })), mdx(\"h3\", {\n    \"id\": \"navuser\"\n  }, \"NavUser\"), mdx(\"p\", null, \"The nav user component is for actions & settings related to the user. It is intended to always be placed at the right end of the nav bar. For wider screens, text can be displayed for the user\\u2019s name and a meta item (such as a plan name) or only a name. When the screen is narrow, the text will be dropped.\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-typescript\",\n    \"metastring\": \"themeName=dark\",\n    \"themeName\": \"dark\"\n  }, \"import { colorsBackgroundDark, layout } from '@pluralsight/ps-design-system-core'\\nimport NavUser from '@pluralsight/ps-design-system-navuser'\\nimport React from 'react'\\n\\nfunction Example() {\\n  return (\\n    <div className=\\\"example-grid--col-3\\\">\\n      <NavUser\\n        name=\\\"Name\\\"\\n        meta=\\\"Meta\\\"\\n        src=\\\"https://en.gravatar.com/userimage/8399312/b15448d840afacd0eb18102baf788255.jpeg\\\"\\n      />\\n      <NavUser\\n        name=\\\"Name\\\"\\n        src=\\\"https://en.gravatar.com/userimage/8399312/b15448d840afacd0eb18102baf788255.jpeg\\\"\\n      />\\n      <NavUser src=\\\"https://en.gravatar.com/userimage/8399312/b15448d840afacd0eb18102baf788255.jpeg\\\" />\\n    </div>\\n  )\\n}\\n\\nexport default Example\\n\")), mdx(Usage, {\n    figmaUrl: \"https://www.figma.com/file/YsTklBecdddy9RZ3HXddIseD/?node-id=10262%3A377\",\n    install: \"npm install @pluralsight/ps-design-system-navuser\",\n    import: \"import NavUser from '@pluralsight/ps-design-system-navuser'\",\n    packageName: \"navuser\",\n    mdxType: \"Usage\"\n  }), mdx(TypesTable, {\n    mdxType: \"TypesTable\"\n  }, mdx(TypesProp, {\n    name: \"href\",\n    type: \"string\",\n    desc: \"destination url; renders anchor\",\n    mdxType: \"TypesProp\"\n  }), mdx(TypesProp, {\n    name: \"onClick\",\n    type: \"Event => void\",\n    desc: \"click handler\",\n    mdxType: \"TypesProp\"\n  }), mdx(TypesProp, {\n    name: \"meta\",\n    type: \"React.ReactNode\",\n    desc: \"user context\",\n    mdxType: \"TypesProp\"\n  }), mdx(TypesProp, {\n    name: \"name\",\n    type: \"React.ReactNode\",\n    desc: \"user name\",\n    mdxType: \"TypesProp\"\n  }), mdx(TypesProp, {\n    name: \"src\",\n    type: \"string\",\n    desc: \"user profile image url\",\n    mdxType: \"TypesProp\"\n  })), mdx(\"h3\", {\n    \"id\": \"navcookiebanner\"\n  }, \"NavCookieBanner\"), mdx(\"p\", null, \"The nav cookie banner is common nav element that should be present on the page in order to comply with laws requiring notice that cookies are used in our product. It will be affixed to the bottom/left of the app frame.\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-typescript\"\n  }, \"import NavCookieBanner from '@pluralsight/ps-design-system-navcookiebanner'\\nimport React from 'react'\\n\\nfunction Example() {\\n  return (\\n    <div className=\\\"example\\\">\\n      <NavCookieBanner />\\n      <style jsx>{`\\n        .example > div {\\n          position: static;\\n          display: inline-flex;\\n        }\\n      `}</style>\\n    </div>\\n  )\\n}\\n\\nexport default Example\\n\")), mdx(Usage, {\n    figmaUrl: \"https://www.figma.com/file/YsTklBecdddy9RZ3HXddIseD/?node-id=10262%3A377\",\n    install: \"npm install @pluralsight/ps-design-system-navcookiebanner\",\n    import: \"import NavCookieBanner from '@pluralsight/ps-design-system-navcookiebanner'\",\n    packageName: \"navcookiebanner\",\n    mdxType: \"Usage\"\n  }), mdx(TypesTable, {\n    mdxType: \"TypesTable\"\n  }, mdx(TypesProp, {\n    name: \"cookieOptions\",\n    type: \"{ domain: string, expires: Date, secure: boolean, sameSite: string }\",\n    desc: \"attributes of cookie\",\n    mdxType: \"TypesProp\"\n  }), mdx(TypesProp, {\n    name: \"message\",\n    type: \"React.ReactNode\",\n    desc: \"messaging re cookies\",\n    mdxType: \"TypesProp\"\n  }), mdx(TypesProp, {\n    name: \"privacyUpdatedDate\",\n    type: \"Date\",\n    desc: \"date of last terms update\",\n    mdxType: \"TypesProp\"\n  })), mdx(\"h2\", {\n    \"id\": \"accessibility\"\n  }, \"Accessibility\"), mdx(\"p\", null, mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"WCAG 2.1 AA Compliance\")), mdx(CheckCircleFillIcon, {\n    color: \"green\",\n    size: \"xSmall\",\n    mdxType: \"CheckCircleFillIcon\"\n  }), \" 100% axe-core tests\", mdx(\"br\", null), mdx(WarningFilledIcon, {\n    color: \"red\",\n    size: \"xSmall\",\n    mdxType: \"WarningFilledIcon\"\n  }), \" Manual audit\", mdx(\"p\", null, \"WAI-ARIA Patterns: \", mdx(A, {\n    href: \"https://www.w3.org/TR/wai-aria-practices-1.2/#aria_lh_navigation\",\n    target: \"_blank\",\n    rel: \"noreferrer\",\n    mdxType: \"A\"\n  }, \"Navigation (role)\"), \", \", mdx(A, {\n    href: \"https://www.w3.org/TR/wai-aria-practices-1.2/#link\",\n    target: \"_blank\",\n    rel: \"noreferrer\",\n    mdxType: \"A\"\n  }, \"Link\"), \", \", mdx(A, {\n    href: \"https://www.w3.org/TR/wai-aria-practices-1.2/#menubutton\",\n    target: \"_blank\",\n    rel: \"noreferrer\",\n    mdxType: \"A\"\n  }, \"Menu Button\")));\n}\n;\nMDXContent.isMDXComponent = true;","frontmatter":{"name":"Nav","route":"/components/nav"},"headings":[{"value":"Global navigation","depth":1},{"value":"Full nav example","depth":2},{"value":"Nav components","depth":2},{"value":"NavBar","depth":3},{"value":"NavItem","depth":3},{"value":"NavBrand","depth":3},{"value":"NavUser","depth":3},{"value":"NavCookieBanner","depth":3},{"value":"Accessibility","depth":2}]}},"pageContext":{"slug":"/components/nav/","version":"CHANGELOG"}},
    "staticQueryHashes": []}