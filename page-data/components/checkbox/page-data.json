{
    "componentChunkName": "component---src-templates-page-tsx",
    "path": "/components/checkbox",
    "result": {"data":{"mdx":{"body":"var _excluded = [\"components\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar _frontmatter = {\n  \"name\": \"Checkbox\",\n  \"route\": \"/components/checkbox\"\n};\n\nvar makeShortcode = function makeShortcode(name) {\n  return function MDXDefaultShortcode(props) {\n    console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n    return mdx(\"div\", props);\n  };\n};\n\nvar TableOfContents = makeShortcode(\"TableOfContents\");\nvar Intro = makeShortcode(\"Intro\");\nvar Usage = makeShortcode(\"Usage\");\nvar CheckCircleFillIcon = makeShortcode(\"CheckCircleFillIcon\");\nvar WarningFilledIcon = makeShortcode(\"WarningFilledIcon\");\nvar A = makeShortcode(\"A\");\nvar TypesTable = makeShortcode(\"TypesTable\");\nvar TypesProp = makeShortcode(\"TypesProp\");\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"h1\", {\n    \"id\": \"checkbox\"\n  }, \"Checkbox\"), mdx(TableOfContents, _extends({}, props, {\n    mdxType: \"TableOfContents\"\n  })), mdx(Intro, {\n    mdxType: \"Intro\"\n  }, \"Use to allow users to select multiple items from a list of individual items.\"), mdx(Usage, {\n    figmaUrl: \"https://www.figma.com/file/YsTklBecdddy9RZ3HXddIseD/PSDS-Web-Components?node-id=13432%3A559\",\n    install: \"npm install @pluralsight/ps-design-system-checkbox\",\n    import: \"import Checkbox from '@pluralsight/ps-design-system-checkbox'\",\n    packageName: \"checkbox\",\n    version: props.version,\n    mdxType: \"Usage\"\n  }), mdx(\"h2\", {\n    \"id\": \"examples\"\n  }, \"Examples\"), mdx(\"h3\", {\n    \"id\": \"checked\"\n  }, \"Checked\"), mdx(\"p\", null, \"Passing the \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"checked\"), \" indicates that the checkbox is selected.\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-typescript\"\n  }, \"import React from 'react'\\nimport Checkbox from '@pluralsight/ps-design-system-checkbox'\\n\\nconst Comp = () => (\\n  <div className=\\\"example-flex-column\\\">\\n    <Checkbox checked label=\\\"I'm checked\\\" value=\\\"Checked-eg\\\" />\\n    <Checkbox label=\\\"I'm not\\\" value=\\\"Checked-eg\\\" />\\n  </div>\\n)\\n\\nexport default Comp\\n\")), mdx(\"h3\", {\n    \"id\": \"indeterminate\"\n  }, \"Indeterminate\"), mdx(\"p\", null, \"Passing the \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"indeterminate\"), \" flag indicates that the checkbox selection should be obscured as if the control was in a third, indeterminate, state.\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-typescript\"\n  }, \"import React from 'react'\\nimport Checkbox from '@pluralsight/ps-design-system-checkbox'\\n\\nconst Comp = () => (\\n  <div className=\\\"example-flex-column\\\">\\n    <Checkbox\\n      indeterminate\\n      label=\\\"I'm indeterminate\\\"\\n      value=\\\"Indeterminate-eg\\\"\\n    />\\n    <Checkbox\\n      checked\\n      indeterminate\\n      label=\\\"I'm checked but still indeterminate\\\"\\n      value=\\\"Indeterminate-eg\\\"\\n    />\\n  </div>\\n)\\n\\nexport default Comp\\n\")), mdx(\"h3\", {\n    \"id\": \"disabled\"\n  }, \"Disabled\"), mdx(\"p\", null, \"Disabled checkboxes are unmodifiable and diminished visually.\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-typescript\"\n  }, \"import React from 'react'\\nimport Checkbox from '@pluralsight/ps-design-system-checkbox'\\n\\nconst Comp = () => (\\n  <div className=\\\"example-flex-column\\\">\\n    <Checkbox disabled label=\\\"Can't touch this\\\" value=\\\"Disabled-eg\\\" />\\n    <Checkbox disabled checked label=\\\"Checked or not\\\" value=\\\"Disabled-eg\\\" />\\n  </div>\\n)\\n\\nexport default Comp\\n\")), mdx(\"h3\", {\n    \"id\": \"error\"\n  }, \"Error\"), mdx(\"p\", null, \"Error states are engaged with the \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"error\"), \" flag.\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-typescript\"\n  }, \"import React from 'react'\\nimport Checkbox from '@pluralsight/ps-design-system-checkbox'\\n\\nconst Comp = () => (\\n  <div className=\\\"example-flex-column\\\">\\n    <Checkbox error label=\\\"I've got problems\\\" value=\\\"Error-eg\\\" />\\n    <Checkbox\\n      error\\n      checked\\n      label=\\\"Checked and still not good enough\\\"\\n      value=\\\"Error-eg\\\"\\n    />\\n  </div>\\n)\\n\\nexport default Comp\\n\")), mdx(\"h3\", {\n    \"id\": \"in-app\"\n  }, \"In-app\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-typescript\"\n  }, \"import React, { useState } from 'react'\\nimport Checkbox from '@pluralsight/ps-design-system-checkbox'\\n\\nfunction InAppExample() {\\n  const [values, setValues] = useState([])\\n\\n  function checked(name) {\\n    return values.includes(name)\\n  }\\n\\n  function handleCheck(evt, checked, value, name) {\\n    setValues(prev => {\\n      if (checked) {\\n        return [...prev, name]\\n      }\\n      return prev.filter(checkedItem => checkedItem !== name)\\n    })\\n  }\\n\\n  return (\\n    <div className=\\\"example-grid--col-2\\\">\\n      <div>\\n        <Checkbox\\n          onChange={handleCheck}\\n          name=\\\"demo\\\"\\n          value=\\\"yes\\\"\\n          label=\\\"Has demo?\\\"\\n          checked={checked('demo')}\\n        />\\n        <Checkbox\\n          onChange={handleCheck}\\n          name=\\\"assessment\\\"\\n          value=\\\"of-course\\\"\\n          label=\\\"Has assessment?\\\"\\n          checked={checked('assessment')}\\n        />\\n        <Checkbox\\n          onChange={handleCheck}\\n          name=\\\"slides\\\"\\n          value=\\\"who-doesnt\\\"\\n          label=\\\"Has slides?\\\"\\n          checked={checked('slides')}\\n        />\\n      </div>\\n      <div>\\n        Checked:{' '}\\n        {values.map(checked => (\\n          <p key={checked}>{checked}</p>\\n        ))}\\n      </div>\\n    </div>\\n  )\\n}\\n\\nexport default InAppExample\\n\")), mdx(\"h2\", {\n    \"id\": \"accessibility\"\n  }, \"Accessibility\"), mdx(\"p\", null, mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"WCAG 2.1 AA Compliance\")), mdx(CheckCircleFillIcon, {\n    color: \"green\",\n    size: \"xSmall\",\n    mdxType: \"CheckCircleFillIcon\"\n  }), \" 100% axe-core tests\", mdx(\"br\", null), mdx(WarningFilledIcon, {\n    color: \"red\",\n    size: \"xSmall\",\n    mdxType: \"WarningFilledIcon\"\n  }), \" Manual audit\", mdx(\"p\", null, \"WAI-ARIA Patterns: \", mdx(A, {\n    href: \"https://www.w3.org/TR/wai-aria-practices-1.2/#checkbox\",\n    target: \"_blank\",\n    rel: \"noreferrer\",\n    mdxType: \"A\"\n  }, \"Checkbox\")), mdx(\"h2\", {\n    \"id\": \"props\"\n  }, \"Props\"), mdx(TypesTable, {\n    mdxType: \"TypesTable\"\n  }, mdx(TypesProp, {\n    name: \"checked\",\n    type: \"boolean\",\n    desc: \"marks as selected\",\n    default: \"false\",\n    mdxType: \"TypesProp\"\n  }), mdx(TypesProp, {\n    name: \"disabled\",\n    type: \"boolean\",\n    desc: \"standard input disable flag\",\n    default: \"false\",\n    mdxType: \"TypesProp\"\n  }), mdx(TypesProp, {\n    name: \"error\",\n    type: \"boolean\",\n    desc: \"error state flag\",\n    default: \"false\",\n    mdxType: \"TypesProp\"\n  }), mdx(TypesProp, {\n    name: \"indeterminate\",\n    type: \"boolean\",\n    desc: \"marks as indeterminate\",\n    default: \"false\",\n    mdxType: \"TypesProp\"\n  }), mdx(TypesProp, {\n    name: \"name\",\n    type: \"string\",\n    desc: \"form data identifier\",\n    mdxType: \"TypesProp\"\n  }), mdx(TypesProp, {\n    name: \"label\",\n    type: \"React.ReactNode\",\n    desc: \"display name\",\n    mdxType: \"TypesProp\"\n  }), mdx(TypesProp, {\n    name: \"onCheck\",\n    type: \"(Event, checked: boolean, value: any, name: string) => void\",\n    desc: \"(optional) triggers on check toggle\",\n    mdxType: \"TypesProp\"\n  }), mdx(TypesProp, {\n    name: \"onChange\",\n    type: \"(Event, checked: boolean, value: any, name: string) => void\",\n    desc: \"(required) triggers on check toggle\",\n    mdxType: \"TypesProp\"\n  }), mdx(TypesProp, {\n    name: \"value\",\n    type: \"string | number\",\n    desc: \"form value when checked\",\n    mdxType: \"TypesProp\"\n  })));\n}\n;\nMDXContent.isMDXComponent = true;","frontmatter":{"name":"Checkbox","route":"/components/checkbox"},"headings":[{"value":"Checkbox","depth":1},{"value":"Examples","depth":2},{"value":"Checked","depth":3},{"value":"Indeterminate","depth":3},{"value":"Disabled","depth":3},{"value":"Error","depth":3},{"value":"In-app","depth":3},{"value":"Accessibility","depth":2},{"value":"Props","depth":2}]}},"pageContext":{"slug":"/components/checkbox/","version":"CHANGELOG"}},
    "staticQueryHashes": []}