{
    "componentChunkName": "component---src-templates-page-tsx",
    "path": "/components/text-paragraph",
    "result": {"data":{"mdx":{"body":"var _excluded = [\"components\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar _frontmatter = {\n  \"name\": \"Paragraph\",\n  \"route\": \"/components/text-paragraph\"\n};\n\nvar makeShortcode = function makeShortcode(name) {\n  return function MDXDefaultShortcode(props) {\n    console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n    return mdx(\"div\", props);\n  };\n};\n\nvar Intro = makeShortcode(\"Intro\");\nvar Usage = makeShortcode(\"Usage\");\nvar TableOfContents = makeShortcode(\"TableOfContents\");\nvar TypesTable = makeShortcode(\"TypesTable\");\nvar TypesProp = makeShortcode(\"TypesProp\");\nvar TypesEnum = makeShortcode(\"TypesEnum\");\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"h1\", {\n    \"id\": \"paragraph\"\n  }, \"Paragraph\"), mdx(Intro, {\n    mdxType: \"Intro\"\n  }, \"For large blocks of text with multiple lines of wrapping.\"), mdx(Usage, {\n    figmaUrl: \"https://www.figma.com/file/YsTklBecdddy9RZ3HXddIseD/?node-id=10247%3A6654\",\n    install: \"npm install @pluralsight/ps-design-system-text\",\n    import: \"import { P } from '@pluralsight/ps-design-system-text'\",\n    packageName: \"text\",\n    version: props.version,\n    mdxType: \"Usage\"\n  }), mdx(TableOfContents, _extends({}, props, {\n    mdxType: \"TableOfContents\"\n  })), mdx(\"h2\", {\n    \"id\": \"examples\"\n  }, \"Examples\"), mdx(\"h3\", {\n    \"id\": \"sizes\"\n  }, \"Sizes\"), mdx(\"p\", null, \"Three text sizes are available using the \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"size\"), \" prop.\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-typescript\"\n  }, \"import { P } from '@pluralsight/ps-design-system-text'\\nimport React from 'react'\\n\\nconst Example: React.FC = props => {\\n  return (\\n    <React.Fragment>\\n      <P size={P.sizes.large}>\\n        <strong>Paragraph - large</strong> - Lorem ipsum dolor sit amet\\n        adipisicing elit, sed do eiusmod tempor incididunt ut labore et dolore\\n        magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation nisi ut\\n        aliquip ex ea commodo consequat. Lorem <em>ipsum dolor sit</em> amet\\n        consectetur adipisicing elit, sed do eiusmod tempor incididunt ut labore\\n        et dolore magna aliqua.\\n      </P>\\n\\n      <P size={P.sizes.normal}>\\n        <strong>Paragraph - normal</strong> - Lorem ipsum dolor sit amet\\n        adipisicing elit, sed do eiusmod tempor incididunt ut labore et dolore\\n        magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation nisi ut\\n        aliquip ex ea commodo consequat. Lorem <em>ipsum dolor sit</em> amet\\n        consectetur adipisicing elit, sed do eiusmod tempor incididunt ut labore\\n        et dolore magna aliqua.\\n      </P>\\n\\n      <P size={P.sizes.small}>\\n        <strong>Paragraph - small</strong> - Lorem ipsum dolor sit amet\\n        adipisicing elit, sed do eiusmod tempor incididunt ut labore et dolore\\n        magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation nisi ut\\n        aliquip ex ea commodo consequat. Lorem <em>ipsum dolor sit</em> amet\\n        consectetur adipisicing elit, sed do eiusmod tempor incididunt ut labore\\n        et dolore magna aliqua.\\n      </P>\\n    </React.Fragment>\\n  )\\n}\\n\\nexport default Example\\n\")), mdx(\"h3\", {\n    \"id\": \"colors\"\n  }, \"Colors\"), mdx(\"p\", null, \"Text color can be set to Primary (high contrast) or Secondary (medium contrast) using the \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"color\"), \" prop.\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-typescript\"\n  }, \"import { P } from '@pluralsight/ps-design-system-text'\\nimport React from 'react'\\n\\nconst Example: React.FC = props => {\\n  return (\\n    <React.Fragment>\\n      <P color={P.colors.primary}>\\n        <strong>Paragraph - primary</strong> - Lorem ipsum dolor sit amet\\n        adipisicing elit, sed do eiusmod tempor incididunt ut labore et dolore\\n        magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation nisi ut\\n        aliquip ex ea commodo consequat. Lorem <em>ipsum dolor sit</em> amet\\n        consectetur adipisicing elit, sed do eiusmod tempor incididunt ut labore\\n        et dolore magna aliqua.\\n      </P>\\n\\n      <P color={P.colors.secondary}>\\n        <strong>Paragraph - secondary</strong> - Lorem ipsum dolor sit amet\\n        adipisicing elit, sed do eiusmod tempor incididunt ut labore et dolore\\n        magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation nisi ut\\n        aliquip ex ea commodo consequat. Lorem <em>ipsum dolor sit</em> amet\\n        consectetur adipisicing elit, sed do eiusmod tempor incididunt ut labore\\n        et dolore magna aliqua.\\n      </P>\\n    </React.Fragment>\\n  )\\n}\\n\\nexport default Example\\n\")), mdx(\"h2\", {\n    \"id\": \"props\"\n  }, \"Props\"), mdx(TypesTable, {\n    mdxType: \"TypesTable\"\n  }, mdx(TypesProp, {\n    name: \"size\",\n    type: mdx(TypesEnum, {\n      enum: P.sizes,\n      mdxType: \"TypesEnum\"\n    }),\n    desc: \"Text size (from P.sizes)\",\n    default: P.sizes.medium,\n    mdxType: \"TypesProp\"\n  }), mdx(TypesProp, {\n    name: \"color\",\n    type: mdx(TypesEnum, {\n      enum: P.colors,\n      mdxType: \"TypesEnum\"\n    }),\n    desc: \"Text color (from P.colors)\",\n    default: P.colors.primary,\n    mdxType: \"TypesProp\"\n  }), mdx(TypesProp, {\n    name: \"children\",\n    type: \"React.ReactNode\",\n    mdxType: \"TypesProp\"\n  })));\n}\n;\nMDXContent.isMDXComponent = true;","frontmatter":{"name":"Paragraph","route":"/components/text-paragraph"},"headings":[{"value":"Paragraph","depth":1},{"value":"Examples","depth":2},{"value":"Sizes","depth":3},{"value":"Colors","depth":3},{"value":"Props","depth":2}]}},"pageContext":{"slug":"/components/text-paragraph/","version":"CHANGELOG"}},
    "staticQueryHashes": []}